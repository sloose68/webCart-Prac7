const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/ElevationQuery-DVIvP83A.js","assets/ScaleRangeLayer-CkcnxI7v.js"])))=>i.map(i=>d[i]);
import{hY as _,d as g,a6 as w,ae as d,fB as V,_ as c,a5 as y,aW as T,W as s,X as o,a2 as f,hr as b,Y as S}from"./ScaleRangeLayer-CkcnxI7v.js";import{S as D}from"./MultiOriginJSONSupport-CaqF7aws.js";import{p as $}from"./ArcGISCachedService-BJx4XpTR.js";import{l as x}from"./ArcGISService-DbN9TSbx.js";import{b as I,y as E}from"./OperationalLayer-5tD0PN5k.js";import{j as L}from"./PortalLayer-Co6vzNlT.js";import{h as O}from"./WorkerHandle-C5MfsF3n.js";import"./TileInfoTilemapCache-DXVK9qk5.js";import"./TilemapCache-CeuMqqpk.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./portalItemUtils-Beiwx9a8.js";class N{constructor(e,t,a,l){this._hasNoDataValues=null,this._minValue=null,this._maxValue=null,"pixelData"in e?(this.values=e.pixelData,this.width=e.width,this.height=e.height,this.noDataValue=e.noDataValue):(this.values=e,this.width=t,this.height=a,this.noDataValue=l)}get hasNoDataValues(){if(this._hasNoDataValues==null){const e=this.noDataValue;this._hasNoDataValues=this.values.includes(e)}return this._hasNoDataValues}get minValue(){return this._ensureBounds(),this._minValue}get maxValue(){return this._ensureBounds(),this._maxValue}get cachedMemory(){return this.values.byteLength+256}_ensureBounds(){if(this._minValue!=null)return;const{noDataValue:e,values:t}=this;let a=1/0,l=-1/0,u=!0;for(const n of t)n===e?this._hasNoDataValues=!0:(a=n<a?n:a,l=n>l?n:l,u=!1);u?(this._minValue=0,this._maxValue=0):(this._minValue=a,this._maxValue=l>-3e38?l:0)}}class m extends O{constructor(e=null){super("LercWorker","_decode",{_decode:t=>[t.buffer]},e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,a){return e&&e.byteLength!==0?this.invoke({buffer:e,options:t},a):Promise.resolve(null)}release(){--this.ref<=0&&(p.forEach(((e,t)=>{e===this&&p.delete(t)})),this.destroy())}}const p=new Map;function j(i=null){let e=p.get(i);return e||(i!=null?(e=new m((t=>i.immediate.schedule(t))),p.set(i,e)):(e=new m,p.set(null,e))),++e.ref,e}let r=class extends $(x(I(L(D(T))))){constructor(...i){super(...i),this.capabilities={operations:{supportsTileMap:!1}},this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=j()}normalizeCtorArgs(i,e){return typeof i=="string"?{url:i,...e}:i}destroy(){this._lercDecoder=_(this._lercDecoder)}readCapabilities(i,e){const t=e.capabilities&&e.capabilities.split(",").map((a=>a.toLowerCase().trim()));return t?{operations:{supportsTileMap:t.includes("tilemap")}}:{operations:{supportsTileMap:!1}}}readVersion(i,e){let t=e.currentVersion;return t||(t=9.3),t}load(i){const e=i!=null?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:t=>{if(t.typeKeywords){for(let a=0;a<t.typeKeywords.length;a++)if(t.typeKeywords[a].toLowerCase()==="elevation 3d layer")return!0}throw new g("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},i).catch(w).then((()=>this._fetchImageService(e)))),Promise.resolve(this)}fetchTile(i,e,t,a){const l=a?.signal,u={responseType:"array-buffer",signal:l},n={noDataValue:a?.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(i,e,t,a))).then((()=>d(this.getTileUrl(i,e,t),u))).then((h=>this._lercDecoder.decode(h.data,n,l))).then((h=>new N(h)))}getTileUrl(i,e,t){const a=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,l=V({...this.parsedUrl.query,blankTile:!a&&null});return`${this.parsedUrl.path}/tile/${i}/${e}/${t}${l?"?"+l:""}`}async queryElevation(i,e){const{ElevationQuery:t}=await c(()=>import("./ElevationQuery-DVIvP83A.js"),__vite__mapDeps([0,1]));return y(e),new t().query(this,i,e)}async createElevationSampler(i,e){const{ElevationQuery:t}=await c(()=>import("./ElevationQuery-DVIvP83A.js"),__vite__mapDeps([0,1]));return y(e),new t().createSampler(this,i,e)}_fetchTileAvailability(i,e,t,a){return this.tilemapCache?this.tilemapCache.fetchAvailability(i,e,t,a):Promise.resolve("unknown")}async _fetchImageService(i){if(this.sourceJSON)return this.sourceJSON;const e={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:i},t=await d(this.parsedUrl.path,e);t.ssl&&(this.url=this.url?.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile[v]}};s([o({readOnly:!0})],r.prototype,"capabilities",void 0),s([f("service","capabilities",["capabilities"])],r.prototype,"readCapabilities",null),s([o({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),s([o({readOnly:!0,type:b})],r.prototype,"heightModelInfo",void 0),s([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],r.prototype,"path",void 0),s([o({type:["show","hide"]})],r.prototype,"listMode",void 0),s([o({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],r.prototype,"minScale",void 0),s([o({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],r.prototype,"maxScale",void 0),s([o({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],r.prototype,"opacity",void 0),s([o({type:["ArcGISTiledElevationServiceLayer"]})],r.prototype,"operationalLayerType",void 0),s([o()],r.prototype,"sourceJSON",void 0),s([o({json:{read:!1},value:"elevation",readOnly:!0})],r.prototype,"type",void 0),s([o(E)],r.prototype,"url",void 0),s([o()],r.prototype,"version",void 0),s([f("version",["currentVersion"])],r.prototype,"readVersion",null),r=s([S("esri.layers.ElevationLayer")],r);const v=Symbol("default-fetch-tile");r.prototype.fetchTile[v]=!0;const R=r;export{R as default};
