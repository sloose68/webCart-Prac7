const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/WhereClause-BcL1b2jd.js","assets/FeatureLayer-JSWtiqX3.js","assets/FeatureLayer-C6eb42jv.css"])))=>i.map(i=>d[i]);
import{eD as q,am as Z,db as H,hG as C,cw as g,fd as J,a2 as n,a3 as o,a4 as S,cx as b,h as Q,f4 as B,ay as V,dp as M,nA as N,nB as K,aw as X,nC as Y,nD as ee,nE as te,nF as ie,fw as se,W as ne,cb as re,fA as ae,fQ as G,fo as oe,ji as le,b as R,ey as de,bb as ue,c3 as he,fG as pe,a8 as ce,kW as ye,gn as fe,ab as A,ct as ge,g$ as y,fR as L,c$ as j,nG as we,e4 as _e,_ as ve}from"./FeatureLayer-JSWtiqX3.js";import{t as me}from"./memoize-DmxaQ-k8.js";import{y as be}from"./elevationInfoUtils-BTLmGwO6.js";import{g as Se,t as Ie,W as Oe}from"./boundedPlane-C1RwiXp2.js";import{r as He}from"./layerViewUtils-Cosr-6fr.js";import{h as ke}from"./hitTestSelectUtils-OXNwbEvV.js";import{o as $e,i as Te}from"./queryEngineUtils-DEBbWsId.js";import{h as Fe}from"./WorkerHandle-BHRjr2iF.js";import{e as Pe}from"./projectVectorToVector-DaitYwcv.js";import"./sphere-D3q5SwsU.js";import"./mat3f64-B5o_lm6j.js";import"./vectorStacks-o84gZfM0.js";import"./mat4f64-q_b6UJoq.js";import"./quatf64-aQ5IuZRd.js";import"./lineSegment-DJURsBkI.js";import"./plane-elzMcT1u.js";import"./quantityUtils-DEriBAx-.js";import"./spatialReferenceEllipsoidUtils-DT70ph4G.js";import"./RouteLayerInteraction-AuifzC3j.js";import"./GraphicsLayer-CqL9AsjB.js";import"./Stop-DLeYThMQ.js";import"./networkEnums-BpR_WNtT.js";import"./geodeticLengthOperator-DqENYqZW.js";import"./geodeticCurveType-CirnHLSB.js";import"./earcut-D9gy186-.js";import"./triangle-DC6wRd22.js";import"./VertexSnappingCandidate-DaPcOKG7.js";import"./PointSnappingHint-MNP-l1Zl.js";import"./projectPointToVector-z6pLSDLo.js";function P(e,t){return Ie(t.extent,D),Se(D,q(Me,e.x,e.y,0))}const D=Oe(),Me=Z();let f=class extends H{get tiles(){const e=this.tilesCoveringView,t=this.pointOfInterest!=null?this.pointOfInterest:this.view.center;return e.sort(((i,r)=>P(t,i)-P(t,r))),e}_scaleEnabled(){return He(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||this.tileInfo==null)return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:i}=t,r=[];for(const{row:s,colFrom:a,colTo:l}of e)for(let u=a;u<=l;u++){const _=t.normalizeCol(u),p=new C(null,i,s,_);this.tileInfo.updateTileInfo(p),r.push(p)}return r}get tileInfo(){return this.view.featuresTilingScheme?.tileInfo??null}get tileSize(){return this.tileInfo!=null?this.tileInfo.size[0]:256}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.addHandles(g((()=>this.view?.state?.viewpoint),(()=>this.notifyChange("tilesCoveringView")),J))}};n([o({readOnly:!0})],f.prototype,"tiles",null),n([o({readOnly:!0})],f.prototype,"_scaleEnabled",null),n([o({readOnly:!0})],f.prototype,"tilesCoveringView",null),n([o({readOnly:!0})],f.prototype,"tileInfo",null),n([o({readOnly:!0})],f.prototype,"tileSize",null),n([o({constructOnly:!0})],f.prototype,"view",void 0),n([o({constructOnly:!0})],f.prototype,"layer",void 0),n([o()],f.prototype,"pointOfInterest",void 0),f=n([S("esri.views.2d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],f);let w=class extends H{get _sortedTilesCoveringView(){const t=(this.view.featureTiles?.tiles?.toArray()??[]).map(Ce),i=this._effectivePointOfInterest;return i!=null&&t.sort(((r,s)=>P(i,r)-P(i,s))),t}get tileInfo(){return this.view.featureTiles?.tilingScheme?.toTileInfo()??null}get tileSize(){return this.view.featureTiles?.tileSize??256}get _effectivePointOfInterest(){const t=this.pointOfInterest;return t??this.view.pointsOfInterest?.focus.location}constructor(t){super(t),this.tiles=[],this.pointOfInterest=null}initialize(){this.addHandles([g((()=>this.view.featureTiles),(t=>{this.removeHandles(U),t&&this.addHandles(t.addClient(),U)}),b),g((()=>this._sortedTilesCoveringView),(t=>this._set("tiles",t)),{initial:!0,equals:(t,i)=>Q(t,i,((r,s)=>r.id===s.id))})])}};function Ce({lij:[e,t,i],extent:r}){return new C(`${e}/${t}/${i}`,e,t,i,r)}n([o({readOnly:!0})],w.prototype,"tiles",void 0),n([o({readOnly:!0})],w.prototype,"_sortedTilesCoveringView",null),n([o({readOnly:!0})],w.prototype,"tileInfo",null),n([o({readOnly:!0})],w.prototype,"tileSize",null),n([o({constructOnly:!0})],w.prototype,"view",void 0),n([o()],w.prototype,"pointOfInterest",void 0),n([o()],w.prototype,"_effectivePointOfInterest",null),w=n([S("esri.views.3d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],w);const U="feature-tiles",Ee=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let O=class extends H{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._symbols=Ee.map((t=>new B({color:[t[0],t[1],t[2],.6],outline:{color:"black",width:1}}))),this._enabled=!0}initialize(){this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=a=>{if(a.label!=null)return a.label;let l=a.lij.toString();return a.loadPriority!=null&&(l+=` (${a.loadPriority})`),a.measures&&(l+=`[${a.measures.lodLevel}]`),l},t=this.getTiles(),i=new Array,r=new Set((this._labels.size,this._labels.keys()));t.forEach(((a,l)=>{const u=a.lij.toString();r.delete(u);const _=a.measures?.lodLevel??a.level,p=a.geometry;if(this.enablePolygons&&!this._polygons.has(u)){const d=new V({geometry:p,symbol:this._symbols[_%this._symbols.length]});this._polygons.set(u,d),i.push(d)}if(this.enableLabels){const d=e(a),v=l/(t.length-1),I=N(0,200,v),k=N(20,6,v)/.75,E=a.loadPriority!=null&&a.loadPriority>=t.length,z=new M([I,E?0:I,E?0:I]),x=this.view.type==="3d"?()=>new K({verticalOffset:new ee({screenLength:40/.75}),callout:new Y({color:new M("white"),border:new ie({color:new M("black")})}),symbolLayers:new X([new te({text:d,halo:{color:"white",size:1/.75},material:{color:z},size:k})])}):()=>new se({text:d,haloColor:"white",haloSize:1/.75,color:z,size:k}),T=this._labels.get(u);if(T){const $=x();T.symbol!=null&&JSON.stringify($)===JSON.stringify(T.symbol)||(T.symbol=$)}else{const $=new V({geometry:p.extent.center,symbol:x()});this._labels.set(u,$),i.push($)}}}));const s=new Array;r.forEach((a=>{const l=this._polygons.get(a);l!=null&&(s.push(l),this._polygons.delete(a));const u=this._labels.get(a);u!=null&&(s.push(u),this._labels.delete(a))})),this.view.graphics.removeMany(s),this.view.graphics.addMany(i)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};n([o({constructOnly:!0})],O.prototype,"view",void 0),n([o({readOnly:!0})],O.prototype,"updating",void 0),n([o()],O.prototype,"enabled",null),O=n([S("esri.views.support.TileTreeDebugger")],O);let F=class extends O{constructor(e){super(e)}initialize(){const e=setInterval((()=>this._fetchDebugInfo()),2e3);this.addHandles(ne((()=>clearInterval(e))))}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach((s=>{e.set(s.data.id,s.featureCount)})),this._debugInfo.pendingTiles.forEach((s=>{e.set(s.data.id,s.featureCount),t.set(s.data.id,s.state)}));const i=s=>{const a=t.get(s),l=e.get(s)??"?";return a?`${a}:${l}
${s}`:`store:${l}
${s}`},r=new Map;return this._debugInfo.storedTiles.forEach((s=>{r.set(s.data.id,s.data)})),this._debugInfo.pendingTiles.forEach((s=>{r.set(s.data.id,s.data)})),Array.from(r.values()).map((s=>({lij:[s.level,s.row,s.col],level:s.level,geometry:re.fromExtent(ae(s.extent,this.view.spatialReference)),label:i(s.id)})))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then((e=>{this._debugInfo=e,this.update()}))}};n([o({constructOnly:!0})],F.prototype,"handle",void 0),F=n([S("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],F);let c=class extends H{get updating(){return this._updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this._updatingHandles=new G,this._suspendController=null,this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const i=[];for(const{points:r}of t.pointsInFeatures)for(const{z:s}of r)i.push(s);return{elevations:i,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this.updateOutFields=oe((async(t,i)=>{await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateOutFields",[...t],i)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},i))}))}destroy(){this._suspendController=le(this._suspendController),this._workerHandle.destroy(),this._updatingHandles.destroy()}initialize(){this._workerHandle=new xe(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.query,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.addHandles([this._workerHandle.on("notify-updating",(({updating:e})=>this._workerHandleUpdating=e)),this._workerHandle.on("notify-availability",(({availability:e})=>this._set("availability",e)))])}async setup(e,t){const i=ze(e.layer);if(i==null)return;const r={configuration:W(e.configuration),serviceInfo:i,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:e.layer.elevationInfo?.toJSON()};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",r,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const i=W(e);await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const{point:i,filter:r,coordinateHelper:s}=e,a={...e,point:Pe(i[0],i[1],i[2],s.spatialReference.toJSON()),filter:r?.toJSON()};return this._workerHandle.invoke(a,t)}async updateTiles(e,t){const i={tiles:e.tiles,tileInfo:e.tileInfo!=null?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async handleEdits({historicMoment:e,addedFeatures:t,deletedFeatures:i,updatedFeatures:r},s){const a={historicMoment:e,addedFeatures:t?.map((({objectId:l})=>l)).filter(R)??[],deletedFeatures:i?.map((({objectId:l,globalId:u})=>({objectId:l,globalId:u})))??[],updatedFeatures:r?.map((({objectId:l})=>l)).filter(R)??[]};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("handleEdits",a,s)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},s))}async setHistoricMoment(e,t){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setHistoricMoment",{moment:e},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}async setSuspended(e){this._suspendController?.abort(),this._suspendController=new AbortController,await this._workerHandle.invokeMethod("setSuspended",e,this._suspendController.signal)}};function W(e){return{filter:e.filter!=null?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}function ze(e){return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:e.parsedUrl?.path??"",fieldsIndex:e.fieldsIndex.toJSON(),geometryType:de.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:e.timeInfo?.toJSON()}}n([o({constructOnly:!0})],c.prototype,"schedule",void 0),n([o({constructOnly:!0})],c.prototype,"hasZ",void 0),n([o({constructOnly:!0})],c.prototype,"elevationAlignPointsInFeatures",void 0),n([o({constructOnly:!0})],c.prototype,"queryForSymbologySnapping",void 0),n([o({readOnly:!0})],c.prototype,"updating",null),n([o({readOnly:!0})],c.prototype,"availability",void 0),n([o()],c.prototype,"_workerHandleUpdating",void 0),c=n([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],c);class xe extends Fe{constructor(t,i){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:i})}}let m=class extends H{get tiles(){return[new C("0/0/0",0,0,0,ue(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new he({origin:new ce({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new pe({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};n([o({readOnly:!0})],m.prototype,"tiles",null),n([o({readOnly:!0})],m.prototype,"tileInfo",null),n([o({readOnly:!0})],m.prototype,"tileSize",null),n([o({constructOnly:!0})],m.prototype,"layer",void 0),n([o()],m.prototype,"pointOfInterest",void 0),m=n([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],m);let h=class extends H{get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get _layerView(){return this.view?.allLayerViews.find((e=>e.layer===this._layer))}get _isSuspended(){return ye(this._layer)&&!this.layerSource.sublayerSources.some((e=>e.enabled&&e.layer.visible))?!0:!!this.view&&(this._layerView?.suspended!==!1||!this.layerSource.enabled)}get updating(){return this._workerHandle?.updating||this._updatingHandles.updating}get _outFields(){const{view:e,_layerView:t,layerSource:i}=this,{layer:r}=i,{fieldsIndex:s,timeInfo:a,floorInfo:l,subtypeField:u}=r,_=t&&"filter"in t?t.filter:null,p=_?.where&&_.where!=="1=1"?this._getOrLoadWhereFields(_.where,s):[];if(_?.timeExtent&&a){const{startField:d,endField:v}=a,I=s.get(d)?.name??d,k=s.get(v)?.name??v;I&&p.push(I),k&&p.push(k)}if(e?.map&&ke(e.map)&&e.map.utilityNetworks?.find((d=>d.isUtilityLayer(r)))){const d=r.fieldsIndex.get("assetGroup")?.name,v=r.fieldsIndex.get("assetType")?.name;d&&v&&(p.push(d),p.push(v))}if(r&&l?.floorField&&e?.floors?.length){const d=s.get(l.floorField)?.name??l.floorField;d&&p.push(d)}if(u){const d=s.get(u)?.name??u;d&&p.push(d)}return new Set(p)}get configuration(){const{view:e}=this,{apiKey:t,customParameters:i}=this._layer,r=e!=null?e.type:"2d",s=this._layer.createQuery();return this._layerView&&"effectiveDisplayFilter"in this._layerView&&(s.where=fe(s.where,this._layerView.effectiveDisplayFilter?.where)),{filter:s,customParameters:t?{...i,token:t}:i,viewType:r}}get availability(){return this._workerHandle?.availability??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._updatingHandles=new G,this._workerHandle=null,this._debug=null,this._memoizedMakeGetGroundElevation=me(Te)}initialize(){let e;const t=this.view;if(t==null||t.destroyed)this._tilesOfInterest=new m({layer:this._layer}),e=this._workerHandle=new c;else switch(t.type){case"2d":this._tilesOfInterest=new f({view:t,layer:this._layer}),e=this._workerHandle=new c;break;case"3d":{const{resourceController:i}=t,r=this._layer;this._tilesOfInterest=new w({view:t}),e=this._workerHandle=new c({schedule:s=>i.immediate.schedule(s),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(s,a)=>{const l=await t.whenLayerView(r);return A(a),l.elevationAlignPointsInFeatures(s,a)},queryForSymbologySnapping:async(s,a)=>{const l=await t.whenLayerView(r);return A(a),l.queryForSymbologySnapping(s,a)}}),this.addHandles([t.elevationProvider.on("elevation-change",(({context:s})=>{const{elevationInfo:a}=r;be(s,a)&&y(e.notifyElevationSourceChange())})),g((()=>r.elevationInfo),(()=>y(e.notifyElevationSourceChange())),b),g((()=>this._layerView?.layer?.renderer),(()=>y(e.notifySymbologyChange())),b),g((()=>this._layerView?.symbologySnappingSupported??!1),(s=>y(e.setSymbologySnappingSupported(s))),b),ge((()=>this._layerView?.layer),["edits","apply-edits","graphic-update"],(()=>e.notifySymbologyChange()))]);break}}this.addHandles([L(e)]),y(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this._updatingHandles.add((()=>this._updateTilesParameters),(()=>y(e.updateTiles(this._updateTilesParameters,null))),b),this.addHandles([g((()=>this.configuration),(i=>y(e.configure(i,null))),J),g((()=>this._layer.historicMoment),(i=>y(e.setHistoricMoment(i))),j),g((()=>this._outFields),(i=>y(e.updateOutFields(i))),b),g((()=>this._isSuspended),(i=>y(e.setSuspended(i))),j)]),t!=null&&this.addHandles(g((()=>we.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES),(i=>{i&&!this._debug?(this._debug=new F({view:t,handle:e}),this.addHandles(L(this._debug),"debug")):!i&&this._debug&&this.removeHandles("debug")}),b)),this.addHandles([this.layerSource.layer.on("edits",(i=>y(e.handleEdits(i,null)))),this.layerSource.layer.on("apply-edits",(i=>this._updatingHandles.addPromise(i.result)))])}destroy(){this._updatingHandles.destroy(),this._tilesOfInterest.destroy()}refresh(){this._workerHandle?.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:i,point:r}=e;this._tilesOfInterest.pointOfInterest=i.arrayToPoint(r);const s=this._memoizedMakeGetGroundElevation(this.view,i.spatialReference);return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map((a=>$e(a,s)))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}_getOrLoadWhereFields(e,t){const{_whereModule:i}=this;if(!this._loadWhereModuleTask&&!i){const r=_e((async()=>{const s=await ve(()=>import("./WhereClause-BcL1b2jd.js").then(a=>a.W),__vite__mapDeps([0,1,2]));return this._whereModule=s.default,this._whereModule}));return this._loadWhereModuleTask=r,this._updatingHandles.addPromise(r.promise),[]}if(!i)return[];try{return i.create(e,{fieldsIndex:t}).fieldNames}catch{return[]}}};n([o({constructOnly:!0})],h.prototype,"spatialReference",void 0),n([o({constructOnly:!0})],h.prototype,"layerSource",void 0),n([o({constructOnly:!0})],h.prototype,"view",void 0),n([o()],h.prototype,"_tilesOfInterest",void 0),n([o({readOnly:!0})],h.prototype,"_updateTilesParameters",null),n([o()],h.prototype,"_layerView",null),n([o()],h.prototype,"_isSuspended",null),n([o({readOnly:!0})],h.prototype,"updating",null),n([o()],h.prototype,"_outFields",null),n([o({readOnly:!0})],h.prototype,"configuration",null),n([o({readOnly:!0})],h.prototype,"availability",null),n([o()],h.prototype,"_loadWhereModuleTask",void 0),n([o()],h.prototype,"_whereModule",void 0),h=n([S("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],h);export{h as FeatureServiceSnappingSource};
