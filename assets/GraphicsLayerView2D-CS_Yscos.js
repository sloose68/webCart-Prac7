import{d0 as m,a4 as c,aw as g,as as n,b as l,O as h,Q as d,W as o,X as w,Y as u}from"./ScaleRangeLayer-CkcnxI7v.js";import{S as y,u as V}from"./LayerView-C4qWnKoZ.js";import{t as v}from"./GraphicContainer-CiYDJl8Q.js";import{O as f}from"./GraphicsView2D-B2pVjBVs.js";import"./Container-BmB3kfi0.js";import"./layerViewUtils-7LirAzEv.js";import"./AGraphicContainer-BRIwWsks.js";import"./TechniqueInstance-DVVC-uuD.js";import"./UpdateTracking2D-DciXD9FG.js";import"./Utils-eM5oEcgf.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-CCZMtxkY.js";import"./ProgramTemplate-DuKm7wPA.js";import"./TileContainer-BekcfWbi.js";import"./WGLContainer-FqqlXR4w.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-CUS6XBgd.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-Diaz3NGZ.js";import"./OptimizedFeature-BRiTb9Ij.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-B_cZeoI_.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-BGbPHaS4.js";import"./ShaderBuilder-G_dO87DI.js";import"./BindType-BBwFZqyN.js";import"./utils-Cemv36zb.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-x30S7ems.js";import"./AttributeStore-B7-77xlN.js";import"./labelUtils-xrhI_YuC.js";import"./queryUtils-CVnyp2w-.js";import"./json-Wa8cmqdu.js";import"./timeSupport-DTr9m4br.js";import"./normalizeUtilsSync-DkRhRiTv.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-C8ZQMJCs.js";let e=class extends y(V){attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m((()=>this.layer?.visible),(()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()}))]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map((s=>({type:"graphic",graphic:s,mapPoint:i,layer:this.layer}))):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,s){let t;typeof i=="number"?t=[i]:i instanceof g?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map((r=>r&&r.uid)):n.isCollection(i)&&i.length>0&&(t=i.map((r=>r&&r.uid)).toArray());const a=t?.filter(l);if(!a?.length)return h();const p=s?.name??d;return this._addHighlights(a,p),h((()=>!this.destroyed&&this._removeHighlights(a,p)))}_processHighlight(){const i=this._getHighlights();this.graphicsView?.setHighlight(i)}};o([w()],e.prototype,"graphicsView",void 0),e=o([u("esri.views.2d.layers.GraphicsLayerView2D")],e);const pi=e;export{pi as default};
