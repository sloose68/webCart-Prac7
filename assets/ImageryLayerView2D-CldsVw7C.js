import{db as $,Z as b,D as _,ay as P,a2 as s,a3 as n,a4 as v,bt as E,fo as z,c8 as B,cw as f,c$ as T,aa as U,eQ as I,d as A,ab as H,ak as C,a8 as S,Q as O,fd as D,aw as q,W as V,b as L,X as G,O as M}from"./index-DO5zGDFy.js";import{d as N,f as j,h as J}from"./RasterVFDisplayObject-BKUHj5dt.js";import{S as W,u as Q}from"./LayerView-Doz3WFOp.js";import{O as X}from"./GraphicsView2D-Bl8xvMNI.js";import{a as Z}from"./HighlightGraphicContainer-DHI3MXUM.js";import{U as K,m as Y}from"./dataUtils-4yuI7tRO.js";import{r as ee}from"./BitmapContainer-BrIx6j1N.js";import{n as te}from"./Container-BN_aiuQ-.js";import{l as ie}from"./BitmapTechnique-B-Vj4FuC.js";import{M as re}from"./ExportStrategy-D99IXndo.js";import{Q as ae,O as se,v as oe}from"./rasterProjectionHelper-DQ6l7p-Z.js";import{n as ne}from"./WGLContainer-gqfrfYoD.js";import{i as le}from"./timeSupport-DndpBYpf.js";import{p as he}from"./popupUtils-CIX694tH.js";import{i as pe}from"./RefreshableLayerView-DG_T2LlN.js";import"./ProgramTemplate-CV2s5TMF.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./Utils-C7AwGdUV.js";import"./layerViewUtils-DKAt--v3.js";import"./AttributeStore-Bs3IW0-x.js";import"./UpdateTracking2D-BYq6_I2u.js";import"./constants-BFLErLYb.js";import"./queryUtils-LdDtF0Uj.js";import"./json-Wa8cmqdu.js";import"./timeSupport-B0KgrVns.js";import"./featureConversionUtils-CLKc-TL5.js";import"./OptimizedFeature-DXawZqVI.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-BaAIf_uj.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-CiJGZZXH.js";import"./FramebufferObject-J9vQGfVh.js";import"./ShaderBuilder-6EiPRc2v.js";import"./BindType-BBwFZqyN.js";import"./utils-D5lHKt24.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BVvANoyd.js";import"./normalizeUtilsSync-BDBZcs-V.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-B9771ZuC.js";import"./AGraphicContainer-CgvD3gmE.js";import"./TechniqueInstance-DVVWFkGB.js";import"./TileContainer-SLffMg4T.js";import"./vec3f32-WCVSSNPR.js";import"./bitmapUtils-DEzZa_Au.js";import"./StyleDefinition-htb1aXAC.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";let p=class extends ${constructor(){super(...arguments),this.attached=!1,this.container=new te,this.updateRequested=!1,this.type="imagery",this._bitmapView=new ee}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(t){this.strategy.update(t).catch((i=>{b(i)||_.getLogger(this).error(i)}))}hitTest(t){return new P({attributes:{},geometry:t.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const t=this.layer.version>=10,i=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,o=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new re({container:this._bitmapView,imageNormalizationSupported:t,imageMaxHeight:i,imageMaxWidth:o,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports((async t=>{const{source:i}=t;if(!i||i instanceof ImageBitmap)return;const o=await this.layer.applyRenderer({extent:i.extent,pixelBlock:i.originalPixelBlock??i.pixelBlock});i.filter=a=>this.layer.pixelFilter?this.layer.applyFilter(a):{...o,extent:i.extent}})).catch((t=>{b(t)||_.getLogger(this).error(t)}))}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const t=this.strategy.bitmaps;if(t.length===1&&t[0].source)return{extent:t[0].source.extent,pixelBlock:t[0].source.originalPixelBlock};if(t.length>1){const i=this.view.extent,o=t.map((r=>r.source)).filter((r=>r.extent&&r.extent.intersects(i))).map((r=>({extent:r.extent,pixelBlock:r.originalPixelBlock}))),a=K(o,i);return a!=null?{extent:a.extent,pixelBlock:a.pixelBlock}:null}return null}async _fetchImage(t,i,o,a){(a=a||{}).timeExtent=this.timeExtent,a.requestAsImageElement=!0,a.returnImageBitmap=!0;const r=await this.layer.internalFetchImage(t,i,o,a);if(r.imageBitmap)return r.imageBitmap;const l=await this.layer.applyRenderer(r.pixelData,{signal:a.signal}),h=new ie(l.pixelBlock,l.extent?.clone(),r.pixelData.pixelBlock);return h.filter=c=>this.layer.applyFilter(c),h}};s([n()],p.prototype,"attached",void 0),s([n()],p.prototype,"container",void 0),s([n()],p.prototype,"layer",void 0),s([n()],p.prototype,"strategy",void 0),s([n()],p.prototype,"timeExtent",void 0),s([n()],p.prototype,"view",void 0),s([n()],p.prototype,"updateRequested",void 0),s([n()],p.prototype,"updating",null),s([n()],p.prototype,"type",void 0),p=s([v("esri.views.2d.layers.imagery.ImageryView2D")],p);class ce extends ne{constructor(){super(...arguments),this.symbolTypes=["triangle"]}prepareRenderPasses(t){const i=t.registerRenderPass({name:"imagery (vf)",brushes:[N],target:()=>this.children,drawPhase:E.MAP});return[...super.prepareRenderPasses(t),i]}doRender(t){this.visible&&t.drawPhase===E.MAP&&this.symbolTypes.forEach((i=>{t.renderPass=i,super.doRender(t)}))}}let u=class extends ${constructor(e){super(e),this._loading=null,this.update=z(((t,i)=>this._update(t,i).catch((o=>{b(o)||_.getLogger(this).error(o)}))))}get updating(){return!!this._loading}redraw(e){if(!this.container.children.length)return;const t=this.container.children[0];t.symbolizerParameters=e,t.invalidateVAO(),this.container.symbolTypes=e.style==="wind_speed"?["scalar","triangle"]:e.style==="simple_scalar"?["scalar"]:["triangle"],this.container.requestRender()}async _update(e,t,i){if(!e.stationary)return;const{extent:o,spatialReference:a}=e.state,r=new B({xmin:o.xmin,ymin:o.ymin,xmax:o.xmax,ymax:o.ymax,spatialReference:a}),[l,h]=e.state.size;this._loading=this.fetchPixels(r,l,h,i);const c=await this._loading;this._addToDisplay(c,t,e.state),this._loading=null}_addToDisplay(e,t,i){if(e.pixelBlock==null)return this.container.children.forEach((l=>l.destroy())),void this.container.removeAllChildren();const{extent:o,pixelBlock:a}=e,r=new j(a);r.offset=[0,0],r.symbolizerParameters=t,r.rawPixelData=e,r.invalidateVAO(),r.x=o.xmin,r.y=o.ymax,r.pixelRatio=i.pixelRatio,r.rotation=i.rotation,r.resolution=i.resolution,r.width=a.width*t.symbolTileSize,r.height=a.height*t.symbolTileSize,this.container.children.forEach((l=>l.destroy())),this.container.removeAllChildren(),this.container.symbolTypes=t.style==="wind_speed"?["scalar","triangle"]:t.style==="simple_scalar"?["scalar"]:["triangle"],this.container.addChild(r)}};s([n()],u.prototype,"fetchPixels",void 0),s([n()],u.prototype,"container",void 0),s([n()],u.prototype,"_loading",void 0),s([n()],u.prototype,"updating",null),u=s([v("esri.views.2d.layers.imagery.ImageryVFStrategy")],u);let d=class extends ${constructor(){super(...arguments),this.attached=!1,this.container=new ce,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(e,t,i,o)=>{const a=await this._projectFullExtentPromise,{layer:r}=this,{symbolTileSize:l}=r.renderer,{extent:h,width:c,height:y}=Y(e,t,i,l,a);if(a!=null&&!a.intersects(e))return{extent:h,pixelBlock:null};const g={bbox:`${h.xmin}, ${h.ymin}, ${h.xmax}, ${h.ymax}`,exportParametersVersion:r.exportImageServiceParameters.version,symbolTileSize:l,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(g)){const m=this.getPixelData();if(m!=null&&`${m.extent.xmin}, ${m.extent.ymin}, ${m.extent.xmax}, ${m.extent.ymax}`===g.bbox)return m}const{pixelBlock:w}=await r.fetchPixels(h,c,y,{timeExtent:this.timeExtent,interpolation:r.interpolation,signal:o});if(this._dataParameters=g,w==null)return{extent:h,pixelBlock:null};const{dataType:R}=r.rasterInfo;return{extent:h,pixelBlock:R==="vector-uv"&&w?await r.convertVectorFieldData(w,"vector-uv",{signal:o}):w}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new u({container:this.container,fetchPixels:this._fetchpixels}),this.addHandles(f((()=>this.layer.renderer),(e=>this._updateSymbolizerParams(e)),T),"attach")}detach(){this._strategy.destroy(),this.container.children.forEach((e=>e.destroy())),this.container.removeAllChildren(),this.removeHandles("attach"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){const e=this.container.children[0]?.rawPixelData;if(this.updating||!e)return null;const{extent:t,pixelBlock:i}=e;return{extent:t,pixelBlock:i}}hitTest(e){return new P({attributes:{},geometry:e.clone(),layer:this.layer})}update(e){this._strategy.update(e,this._symbolizerParams).catch((t=>{b(t)||_.getLogger(this).error(t)}))}redraw(){const{renderer:e}=this.layer;e&&(this._updateSymbolizerParams(e),this._strategy.redraw(this._symbolizerParams))}_canReuseVectorFieldData(e){const t=this._dataParameters.exportParametersVersion===e.exportParametersVersion,i=this._dataParameters.time===e.time,o=this._dataParameters.symbolTileSize===e.symbolTileSize,a=this._dataParameters.bbox===e.bbox;return t&&i&&o&&a}async _getProjectedFullExtent(e){try{return ae(this.layer.fullExtent,e)}catch{try{const i=(await U(this.layer.url,{query:{option:"footprints",outSR:I(e),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return i?B.fromJSON(i):null}catch{return null}}}_updateSymbolizerParams(e){e?.type==="vector-field"&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};s([n()],d.prototype,"attached",void 0),s([n()],d.prototype,"container",void 0),s([n()],d.prototype,"layer",void 0),s([n()],d.prototype,"timeExtent",void 0),s([n()],d.prototype,"type",void 0),s([n()],d.prototype,"view",void 0),s([n()],d.prototype,"updating",null),d=s([v("esri.views.2d.layers.imagery.VectorFieldView2D")],d);const de=e=>{let t=class extends e{constructor(){super(...arguments),this.view=null}get timeExtent(){return le(this.layer,this.view?.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(i,o){const{layer:a}=this;if(!i)throw new A("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:a});const{popupEnabled:r}=a,l=he(a,o);if(!r||l==null)return[];const h=await l.getRequiredFields();H(o);const c=new C;c.timeExtent=this.timeExtent,c.geometry=i,c.outFields=h,c.outSpatialReference=i.spatialReference;const{resolution:y,spatialReference:g}=this.view,w=this.view.type==="2d"?new S(y,y,g):new S(.5*y,.5*y,g),{returnTopmostRaster:R,showNoDataRecords:m}=l.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},k={returnDomainValues:!0,returnTopmostRaster:R,pixelSize:w,showNoDataRecords:m,signal:o?.signal};return a.queryVisibleRasters(c,k).then((F=>F))}async getSourceScale(){return await oe(),await this.layer.load(),se(this.layer.serviceRasterInfo,this.view.spatialReference)}canResume(){return!!super.canResume()&&!this.timeExtent?.isEmpty}};return s([n()],t.prototype,"layer",void 0),s([n()],t.prototype,"suspended",void 0),s([n({readOnly:!0})],t.prototype,"timeExtent",null),s([n()],t.prototype,"view",void 0),t=s([v("esri.views.layers.ImageryLayerView")],t),t};let x=class extends de(pe(W(Q))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new O,this._highlightView=void 0,this.layer=null,this.subview=null}get pixelData(){const{subview:e}=this;return this.updating||!e?null:"getPixelData"in e?e.getPixelData():null}update(e){this.subview?.update(e)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new X({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new Z(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.addAttachHandles([f((()=>this.layer.exportImageServiceParameters.version),(e=>{e&&this._exportImageVersion!==e&&(this._exportImageVersion=e,this.requestUpdate())}),D),f((()=>this.timeExtent),(e=>{const{subview:t}=this;t&&(t.timeExtent=e,"redraw"in t?this.requestUpdate():t.redrawOrRefetch())}),D),this.layer.on("redraw",(()=>{const{subview:e}=this;e&&("redraw"in e?e.redraw():e.redrawOrRefetch())})),f((()=>this.layer.renderer),(()=>this._setSubView()))])}detach(){this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null,this._highlightView?.destroy(),this._exportImageVersion=-1}viewChange(){}moveEnd(){this.requestUpdate()}highlight(e,t){if(!((Array.isArray(e)?e[0]:q.isCollection(e)?e.at(0):e)instanceof P))return V();let i=[];if(Array.isArray(e)||q.isCollection(e)?i=e.map((r=>r.clone())):e instanceof P&&(i=[e.clone()]),!i?.filter(L)?.length)return V();const a=t?.name??G;return this._addHighlightGraphics(i,a),V((()=>!this.destroyed&&this._removeHighlightGraphics(i,a)))}_addHighlightGraphics(e,t){this._highlightGraphics.addMany(e),this._addHighlights(e.map((i=>i.uid)),t)}_removeHighlightGraphics(e,t){this._highlightGraphics.removeMany(e),this._removeHighlights(e.map((i=>i.uid)),t)}async doRefresh(){this.requestUpdate()}isUpdating(){const e=!this.subview||this.subview.updating||!!this._highlightView?.updating;return M("esri-2d-log-updating")&&console.log(`Updating ImageryLayerView2D (${this.layer.id}): ${e}
-> subview ${!this.subview||this.subview.updating}
-> higlightView ${this._highlightView?.updating}
`),e}_processHighlight(){const e=this._getHighlights();this._highlightView?.setHighlight(e)}_setSubView(){if(!this.view)return;const e=this.layer.renderer?.type;let t="imagery";if(e==="vector-field"?t="imageryVF":e==="flow"&&(t="flow"),this.subview){const{type:i}=this.subview;if(i===t)return this._attachSubview(this.subview),void(i==="flow"?this.subview.redrawOrRefetch():i==="imagery"&&this.layer.format==="lerc"?this.subview.redraw():this.requestUpdate());this._detachSubview(this.subview),this.subview?.destroy()}this.subview=t==="imagery"?new p({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):t==="imageryVF"?new d({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new J({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(e){e&&!e.attached&&(e.attach(),e.attached=!0,this.container.addChildAt(e.container,0))}_detachSubview(e){e?.attached&&(this.container.removeChild(e.container),e.detach(),e.attached=!1)}};s([n()],x.prototype,"pixelData",null),s([n()],x.prototype,"subview",void 0),x=s([v("esri.views.2d.layers.ImageryLayerView2D")],x);const lt=x;export{lt as default};
