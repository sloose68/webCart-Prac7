import{e3 as t,e4 as y}from"./ScaleRangeLayer-CkcnxI7v.js";function E(r){return U(r,!0)}function U(r,e){if(Array.isArray(r)){if(r.length<t)return r}else if(r.length<t)return Array.from(r);let n=!0,f=!0;return r.some(((o,w)=>(n=n&&o===0,f=f&&o===w,!n&&!f))),n?g(r.length):f?h(r.length):y(r)&&r.BYTES_PER_ELEMENT===Uint16Array.BYTES_PER_ELEMENT?r:c(r,!e)}function c(r,e){for(const n of r){if(n>=65536)return y(r)?r:new Uint32Array(r);n>=256&&(e=!1)}return e?new Uint8Array(r):new Uint16Array(r)}function m(r){return r<=t?new Array(r):r<=65536?new Uint16Array(r):new Uint32Array(r)}function b(r){return r<=t?new Array(r):new Uint32Array(r)}let i=l(131072);const A=[0],u=(()=>{const r=new Uint16Array(65536);for(let e=0;e<r.length;++e)r[e]=e;return r})();function h(r){return r===1?A:r<t?Array.from(new Uint16Array(u.buffer,0,r)):r<u.length?new Uint16Array(u.buffer,0,r):(r>i.length&&(i=l(Math.max(2*i.length,r))),new Uint32Array(i.buffer,0,r))}function l(r){const e=new Uint32Array(r);for(let n=0;n<e.length;n++)e[n]=n;return e}let a=new Uint8Array(65536);function g(r){if(r===1)return A;if(r<t)return new Array(r).fill(0);if(r>a.length){const e=Math.max(2*a.length,r);a=new Uint8Array(e)}return new Uint8Array(a.buffer,0,r)}export{h as A,g as U,b as a,U as e,m as f,E as t};
