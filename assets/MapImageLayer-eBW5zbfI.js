const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/mapImageLayerUtils-DpdXT17C.js","assets/utils-CjMZHEOD.js","assets/index-DO5zGDFy.js","assets/originUtils-g6LU6MiT.js","assets/jsonContext-r92RYpBI.js","assets/saveUtils-foTgqyXp.js"])))=>i.map(i=>d[i]);
import{d6 as w,fm as O,d7 as _,f6 as $,eX as E,eY as P,eZ as T,eW as A,f8 as L,f7 as F,fn as M,d9 as R,fo as j,br as V,fi as v,fg as f,fp as b,fq as N,eQ as q,aa as g,bp as J,c8 as U,fr as k,fs as y,ft as W,d as S,Z,d8 as z,_ as D,a2 as a,a3 as n,fu as x,c2 as G,fl as H,f5 as B,a4 as C,fv as K}from"./index-DO5zGDFy.js";import{m as Q,f as X,a as Y}from"./SublayersOwner-BNwl0_bu.js";import{t as ee}from"./imageBitmapUtils-sUKCKVGt.js";import"./QueryTask-BQj94v77.js";import"./executeForIds-BnjGQ6gN.js";import"./query-BP2eh2V_.js";import"./pbfQueryUtils-B1Vg6oKs.js";import"./pbf-BtUhcBfS.js";import"./OptimizedFeature-DXawZqVI.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./executeQueryJSON-BeobjtaJ.js";import"./featureConversionUtils-CLKc-TL5.js";let r=class extends w(O(_(Q(X($(E(P(T(A(L(F(z)))))))))))){constructor(...e){super(...e),this._exportImageParameters=new M({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.elevationInfo=new R({mode:"on-the-ground"}),this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null,this._debouncedSaveOperations=j((async(t,l,i)=>{const{save:p,saveAs:o}=await D(()=>import("./mapImageLayerUtils-DpdXT17C.js"),__vite__mapDeps([0,1,2,3,4,5]));switch(t){case y.SAVE:return p(this,l);case y.SAVE_AS:return o(this,i,l)}}))}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(V).then((()=>this._fetchService(t)))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(e,t){const l=t.supportedImageFormatTypes;return l&&l.includes("PNG32")?"png32":"png24"}writeSublayers(e,t,l,i){if(!this.loaded||!e)return;const p=e.slice().reverse().flatten((({sublayers:s})=>s&&s.toArray().reverse())).toArray();let o=!1;const m=v(i.origin);let d;if(this.capabilities?.operations.supportsExportMap&&this.capabilities?.exportMap?.supportsDynamicLayers){if(m===f.PORTAL_ITEM){const s=this.createSublayersForOrigin("service").sublayers;o=b(p,s,f.SERVICE)}else if(m>f.PORTAL_ITEM){const s=this.createSublayersForOrigin("portal-item");o=b(p,s.sublayers,v(s.origin)),d=s.originWithPartialOverrides}}const u=[],c={writeSublayerStructure:o,...i,minimumWritableOrigin:d};let h=o||this.hasVisibleLayersForOrigin(m);p.forEach((s=>{const I=s.write({},c);u.push(I),h=h||s.originOf("visible")==="user"})),u.some((s=>Object.keys(s).length>1))&&(t.layers=u),h&&(t.visibleLayers=p.filter((s=>s.visible)).map((s=>s.id)))}createExportImageParameters(e,t,l,i){const p=i?.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian()),this._exportImageParameters.floors=i?.floors??null,this._exportImageParameters.scale=N({extent:e,width:t})*p;const o=this._exportImageParameters.toJSON(),m=!i?.rotation||this.version<10.3?{}:{rotation:-i.rotation},d=e?.spatialReference,u=q(d);o.dpi*=p;const c={};if(i?.timeExtent){const{start:h,end:s}=i.timeExtent.toJSON();c.time=h&&s&&h===s?""+h:`${h??"null"},${s??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(c.time="null,null");return{bbox:e?e.xmin+","+e.ymin+","+e.xmax+","+e.ymax:void 0,bboxSR:u,imageSR:u,size:t+","+l,...o,...m,...c}}async fetchImage(e,t,l,i){const{data:p}=await this._fetchImage("image",e,t,l,i);return p}async fetchImageBitmap(e,t,l,i){const{data:p,url:o}=await this._fetchImage("blob",e,t,l,i);return ee(p,o,i?.signal)}async fetchRecomputedExtents(e={}){const t={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:l}=await g(this.url,t),{extent:i,fullExtent:p,timeExtent:o}=l,m=i||p;return{fullExtent:m&&U.fromJSON(m),timeExtent:o&&J.fromJSON({start:o[0],end:o[1]})}}loadAll(){return k(this,(e=>{e(this.allSublayers),e(this.subtables)}))}async save(e){return this._debouncedSaveOperations(y.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(y.SAVE_AS,t,e)}serviceSupportsSpatialReference(e){return W(this,e)}async _fetchImage(e,t,l,i,p){const o={responseType:e,signal:p?.signal??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(t,l,i,p),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},m=this.parsedUrl.path+"/export";if(o.query?.dynamicLayers!=null&&!this.capabilities?.exportMap?.supportsDynamicLayers)throw new S("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:o.query});try{const{data:d}=await g(m,o);return{data:d,url:m}}catch(d){throw Z(d)?d:new S("mapimagelayer:image-fetch-error",`Unable to load image: ${m}`,{error:d})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:l}=await g(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});l&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(e){return!(e==null||!this.sublayersSourceJSON[e]?.visibleLayers)}};a([n(x("dateFieldsTimeReference"))],r.prototype,"dateFieldsTimeZone",void 0),a([n({type:Boolean})],r.prototype,"datesInUnknownTimezone",void 0),a([n()],r.prototype,"dpi",void 0),a([n()],r.prototype,"elevationInfo",void 0),a([n()],r.prototype,"gdbVersion",void 0),a([n()],r.prototype,"imageFormat",void 0),a([G("imageFormat",["supportedImageFormatTypes"])],r.prototype,"readImageFormat",null),a([n({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],r.prototype,"imageMaxHeight",void 0),a([n({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],r.prototype,"imageMaxWidth",void 0),a([n()],r.prototype,"imageTransparency",void 0),a([n({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],r.prototype,"isReference",void 0),a([n({json:{read:!1,write:!1}})],r.prototype,"labelsVisible",void 0),a([n({type:["ArcGISMapServiceLayer"]})],r.prototype,"operationalLayerType",void 0),a([n({json:{read:!1,write:!1}})],r.prototype,"popupEnabled",void 0),a([n(x("preferredTimeReference"))],r.prototype,"preferredTimeZone",void 0),a([n()],r.prototype,"sourceJSON",void 0),a([n({json:{write:{ignoreOrigin:!0}}})],r.prototype,"sublayers",void 0),a([H("sublayers",{layers:{type:[Y]},visibleLayers:{type:[K]}})],r.prototype,"writeSublayers",null),a([n({type:["show","hide","hide-children"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],r.prototype,"listMode",void 0),a([n({json:{read:!1},readOnly:!0,value:"map-image"})],r.prototype,"type",void 0),a([n(B)],r.prototype,"url",void 0),r=a([C("esri.layers.MapImageLayer")],r);const ue=r;export{ue as default};
