import{hq as O,b as k,bk as v,dW as x,hr as C}from"./index-DO5zGDFy.js";import{O as F}from"./quat-v-4FoJvm.js";import{e as R}from"./quatf64-aQ5IuZRd.js";import{t as A,n as w}from"./vec3f32-WCVSSNPR.js";import{u as U,d as B,a as J}from"./PointCloudUniqueValueRenderer-1iWk-FqF.js";import{U as N,w as V,c as q,D as T}from"./I3SBinaryReader-BS-AJFu1.js";import{I as $}from"./orientedBoundingBox-DBzTgw-5.js";import"./mat3f64-B5o_lm6j.js";import"./VertexAttribute-BfkzOMLV.js";import"./mat4f64-q_b6UJoq.js";import"./spatialReferenceEllipsoidUtils-CaVCUFwP.js";import"./computeTranslationToOriginAndRotation-7eQGGBSb.js";import"./plane-UM7dTH0q.js";import"./vectorStacks-o2ABMMQ_.js";function z(u,t,l,n){const{rendererJSON:c,isRGBRenderer:m}=u;let o=null,i=null;if(t&&m)o=t;else if(t&&c?.type==="pointCloudUniqueValueRenderer"){i=U.fromJSON(c);const e=i.colorUniqueValueInfos;o=new Uint8Array(3*n);const f=g(i.fieldTransformType);for(let r=0;r<n;r++){const a=(f?f(t[r]):t[r])+"";for(let s=0;s<e.length;s++)if(e[s].values.includes(a)){o[3*r]=e[s].color.r,o[3*r+1]=e[s].color.g,o[3*r+2]=e[s].color.b;break}}}else if(t&&c?.type==="pointCloudStretchRenderer"){i=B.fromJSON(c);const e=i.stops;o=new Uint8Array(3*n);const f=g(i.fieldTransformType);for(let r=0;r<n;r++){const a=f?f(t[r]):t[r],s=e.length-1;if(a<e[0].value)o[3*r]=e[0].color.r,o[3*r+1]=e[0].color.g,o[3*r+2]=e[0].color.b;else if(a>=e[s].value)o[3*r]=e[s].color.r,o[3*r+1]=e[s].color.g,o[3*r+2]=e[s].color.b;else for(let b=1;b<e.length;b++)if(a<e[b].value){const p=(a-e[b-1].value)/(e[b].value-e[b-1].value);o[3*r]=e[b].color.r*p+e[b-1].color.r*(1-p),o[3*r+1]=e[b].color.g*p+e[b-1].color.g*(1-p),o[3*r+2]=e[b].color.b*p+e[b-1].color.b*(1-p);break}}}else if(t&&c?.type==="pointCloudClassBreaksRenderer"){i=J.fromJSON(c);const e=i.colorClassBreakInfos;o=new Uint8Array(3*n);const f=g(i.fieldTransformType);for(let r=0;r<n;r++){const a=f?f(t[r]):t[r];for(let s=0;s<e.length;s++)if(a>=e[s].minValue&&a<=e[s].maxValue){o[3*r]=e[s].color.r,o[3*r+1]=e[s].color.g,o[3*r+2]=e[s].color.b;break}}}else o=new Uint8Array(3*n).fill(255);if(l&&i?.colorModulation){const e=i.colorModulation.minValue,f=i.colorModulation.maxValue,r=.3;for(let a=0;a<n;a++){const s=l[a],b=s>=f?1:s<=e?r:r+(1-r)*(s-e)/(f-e);o[3*a]=b*o[3*a],o[3*a+1]=b*o[3*a+1],o[3*a+2]=b*o[3*a+2]}}return o}function E(u,t){if(u.encoding==null||u.encoding===""){const l=N(t,u);if(l.vertexAttributes.position==null)return;const n=V(t,l.vertexAttributes.position),c=l.header.fields,m=[c.offsetX,c.offsetY,c.offsetZ],o=[c.scaleX,c.scaleY,c.scaleZ],i=n.length/3,e=new Float64Array(3*i);for(let f=0;f<i;f++)e[3*f]=n[3*f]*o[0]+m[0],e[3*f+1]=n[3*f+1]*o[1]+m[1],e[3*f+2]=n[3*f+2]*o[2]+m[2];return e}if(u.encoding==="lepcc-xyz")return q(t).result}function h(u,t,l){return u?.attributeInfo.useElevation?t?L(t,l):null:u?.attributeInfo.storageInfo?T(u.attributeInfo.storageInfo,u.buffer,l,!0):null}function L(u,t){const l=new Float64Array(t);for(let n=0;n<t;n++)l[n]=u[3*n+2];return l}function X(u,t,l,n,c){const m=u.length/3;let o=0;for(let i=0;i<m;i++){let e=!0;for(let f=0;f<n.length&&e;f++){const{filterJSON:r}=n[f],a=c[f].values[i];switch(r.type){case"pointCloudValueFilter":{const s=r.mode==="exclude";r.values.includes(a)===s&&(e=!1);break}case"pointCloudBitfieldFilter":{const s=M(r.requiredSetBits),b=M(r.requiredClearBits);(a&s)===s&&(a&b)===0||(e=!1);break}case"pointCloudReturnFilter":{const s=15&a,b=a>>>4&15,p=b>1,S=s===1,I=s===b;let y=!1;for(const d of r.includedReturns)if(d==="last"&&I||d==="firstOfMany"&&S&&p||d==="lastOfMany"&&I&&p||d==="single"&&!p){y=!0;break}y||(e=!1);break}}}e&&(l[o]=i,u[3*o]=u[3*i],u[3*o+1]=u[3*i+1],u[3*o+2]=u[3*i+2],t[3*o]=t[3*i],t[3*o+1]=t[3*i+1],t[3*o+2]=t[3*i+2],o++)}return o}function g(u){switch(u){default:case null:case"none":return t=>t;case"low-four-bit":return t=>15&t;case"high-four-bit":return t=>(240&t)>>4;case"absolute-value":return t=>Math.abs(t);case"modulo-ten":return t=>t%10}}function M(u){let t=0;for(const l of u||[])t|=1<<l;return t}class Y{transform(t){const l=this._transform(t),n=[l.points.buffer,l.rgb.buffer];l.pointIdFilterMap!=null&&n.push(l.pointIdFilterMap.buffer);for(const c of l.attributes)"buffer"in c.values&&O(c.values.buffer)&&c.values.buffer!==l.rgb.buffer&&n.push(c.values.buffer);return Promise.resolve({result:l,transferList:n})}_transform(t){const l=E(t.schema,t.geometryBuffer);let n=l.length/3,c=null;const m=new Array,o=h(t.primaryAttributeData,l,n);t.primaryAttributeData!=null&&o&&m.push({attributeInfo:t.primaryAttributeData.attributeInfo,values:o});const i=h(t.modulationAttributeData,l,n);t.modulationAttributeData!=null&&i&&m.push({attributeInfo:t.modulationAttributeData.attributeInfo,values:i});let e=z(t.rendererInfo,o,i,n);if(t.filterInfo&&t.filterInfo.length>0&&t.filterAttributesData!=null){const r=t.filterAttributesData.filter(k).map((a=>{const s=h(a,l,n),b={attributeInfo:a.attributeInfo,values:s};return m.push(b),b}));c=new Uint32Array(n),n=X(l,e,c,t.filterInfo,r)}for(const r of t.userAttributesData){const a=h(r,l,n);m.push({attributeInfo:r.attributeInfo,values:a})}3*n<e.length&&(e=new Uint8Array(e.buffer.slice(0,3*n))),_(l,n,t.elevationOffset);const f=Z(l,n,$.fromData(t.obbData),v.fromJSON(t.inSR),v.fromJSON(t.outSR));return{obbData:t.obbData,points:f,rgb:e,attributes:m,pointIdFilterMap:c}}}function Z(u,t,l,n,c){if(!x(u,n,0,u,c,0,t))throw new Error("Can't reproject");const m=A(l.center),o=w(),i=w(),e=A(l.halfSize);F(D,l.quaternion);const f=new Float32Array(3*t);for(let r=0;r<t;r++){let a=3*r;o[0]=u[a]-m[0],o[1]=u[a+1]-m[1],o[2]=u[a+2]-m[2],C(i,o,D),e[0]=Math.max(e[0],Math.abs(i[0])),e[1]=Math.max(e[1],Math.abs(i[1])),e[2]=Math.max(e[2],Math.abs(i[2])),f[a++]=o[0],f[a++]=o[1],f[a]=o[2]}return l.halfSize=e,f}function _(u,t,l){if(l!==0)for(let n=0;n<t;n++)u[3*n+2]+=l}const D=R();function it(){return new Y}export{it as default};
