import{cY as a,cZ as n,y as d,W as u,Y as l}from"./ScaleRangeLayer-CkcnxI7v.js";import{c}from"./FeatureLayerView2D-cjK-Z-3C.js";import"./featureConversionUtils-Diaz3NGZ.js";import"./OptimizedFeature-BRiTb9Ij.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureFilter-Dx124Zfc.js";import"./labelingInfo-B_JAFYyH.js";import"./NormalizationBinParametersMixin-CZeWOf7T.js";import"./labelUtils-xrhI_YuC.js";import"./timeSupport-DfKIafrl.js";import"./FeatureSet-CvltAc3o.js";import"./AttributeBinsFeatureSet-WtwH5Wdu.js";import"./AttributeBinsQuery-DRBQwKi8.js";import"./queryUtils-CVnyp2w-.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-eTXa4F-h.js";import"./LayerView-C4qWnKoZ.js";import"./Container-BmB3kfi0.js";import"./layerViewUtils-7LirAzEv.js";import"./TechniqueInstance-DVVC-uuD.js";import"./UpdateTracking2D-DciXD9FG.js";import"./Utils-eM5oEcgf.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-CCZMtxkY.js";import"./ProgramTemplate-DuKm7wPA.js";import"./TileContainer-BekcfWbi.js";import"./WGLContainer-FqqlXR4w.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-CUS6XBgd.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-B_cZeoI_.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-BGbPHaS4.js";import"./ShaderBuilder-G_dO87DI.js";import"./BindType-BBwFZqyN.js";import"./utils-Cemv36zb.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-x30S7ems.js";import"./CircularArray-CujHzHWW.js";import"./OrderByInfo-CppKUrvh.js";import"./SDFHelper-Cn-K75tR.js";import"./constants-B4mRqufT.js";import"./bundle-B2FM5W1M.js";import"./FeatureEffect-C66kJK_4.js";import"./popupUtils-Cs5aD5rv.js";import"./RefreshableLayerView-CFBVFi7F.js";let i=class extends c{initialize(){this.addHandles([a((()=>this.view.scale),(()=>this._update()),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some((s=>s.renderer!=null)),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const ai=i;export{ai as default};
