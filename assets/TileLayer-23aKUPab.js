import{aU as _,aV as S,aX as T,a6 as b,ay as v,I as w,ae as c,fB as O,fp as $,d as h,p as W,au as R,eK as U,ex as P,aW as j,W as s,X as o,a2 as B,a3 as I,eY as L,Y as A}from"./ScaleRangeLayer-CkcnxI7v.js";import{S as M}from"./MultiOriginJSONSupport-CaqF7aws.js";import{i as N}from"./APIKeyMixin-DFbvM0Dh.js";import{p as k}from"./ArcGISCachedService-BJx4XpTR.js";import{m as C,f as D,a as J}from"./SublayersOwner-CzMoomRH.js";import{l as q}from"./ArcGISService-DbN9TSbx.js";import{e as G}from"./CustomParametersMixin-CDyaxzvT.js";import{b as V,y as x}from"./OperationalLayer-5tD0PN5k.js";import{j as E}from"./PortalLayer-Co6vzNlT.js";import{f as K}from"./RefreshableLayer-BE14VVV_.js";import{o as y}from"./imageBitmapUtils-Cn3mdSk2.js";import"./TileInfoTilemapCache-DXVK9qk5.js";import"./TilemapCache-CeuMqqpk.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./portalItemUtils-Beiwx9a8.js";import"./QueryTask-CTuEniME.js";import"./infoFor3D-VMSlSy0z.js";import"./executeForIds-CiMwub9m.js";import"./query-DkqYP_IY.js";import"./pbfQueryUtils-Di7dfwDw.js";import"./pbf-D5IDxXWF.js";import"./OptimizedFeature-BRiTb9Ij.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./queryZScale-oYjTlJxk.js";import"./executeQueryJSON-BJJWnKxh.js";import"./FeatureSet-CvltAc3o.js";import"./featureConversionUtils-Diaz3NGZ.js";import"./OrderedLayer-DvxY4FBb.js";import"./OrderByInfo-CppKUrvh.js";import"./labelingInfo-B_JAFYyH.js";import"./NormalizationBinParametersMixin-CZeWOf7T.js";import"./labelUtils-xrhI_YuC.js";import"./FeatureType-Da-ejSqi.js";import"./FeatureTemplate-C8k7_l7R.js";import"./LayerFloorInfo-BSHESHAo.js";import"./Relationship-iA25-Pmk.js";import"./serviceCapabilitiesUtils-D_NhzN5b.js";import"./popupUtils-CF_QFtrk.js";var m;const f=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let i=m=class extends _(S(C(k(D(V(E(q(M(K(N(G(j)))))))))))){constructor(...e){super(...e),this.listMode="show",this.elevationInfo=new T({mode:"on-the-ground"}),this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(b).then((()=>this._fetchService(r)))),Promise.resolve(this)}get attributionDataUrl(){const e=this.parsedUrl?.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}readSpatialReference(e,r){return(e=e||r.tileInfo?.spatialReference)&&v.fromJSON(e)}writeSublayers(e,r,t,a){if(!this.loaded||!e)return;const n=e.slice().reverse().flatten((({sublayers:p})=>p&&p.toArray().reverse())).toArray(),l=[],u={writeSublayerStructure:!1,...a};n.forEach((p=>{const d=p.write({},u);l.push(d)})),l.some((p=>Object.keys(p).length>1))&&(r.layers=l)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl?.path)}castTileServers(e){return Array.isArray(e)?e.map((r=>w(r).path)):null}fetchTile(e,r,t,a={}){const{signal:n}=a,l=this.getTileUrl(e,r,t),u={responseType:"image",signal:n,query:{...this.refreshParameters}};return c(l,u).then((p=>p.data))}async fetchImageBitmapTile(e,r,t,a={}){const{signal:n}=a;if(this.fetchTile!==m.prototype.fetchTile){const d=await this.fetchTile(e,r,t,a);return y(d,e,r,t,n)}const l=this.getTileUrl(e,r,t),u={responseType:"blob",signal:n,query:{...this.refreshParameters}},{data:p}=await c(l,u);return y(p,e,r,t,n)}getTileUrl(e,r,t){const a=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,n=O({...this.parsedUrl?.query,blankTile:!a&&null,...this.customParameters,token:this.apiKey}),l=this.tileServers;return`${l&&l.length?l[r%l.length]:this.parsedUrl?.path}/tile/${e}/${r}/${t}${n?"?"+n:""}`}loadAll(){return $(this,(e=>{e(this.allSublayers)}))}_fetchService(e){return new Promise(((r,t)=>{if(this.sourceJSON){if(this.sourceJSON.bandCount!=null&&this.sourceJSON.pixelSizeX!=null)throw new h("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new h("tile-layer:undefined-url","layer's url is not defined");const a=W(this.parsedUrl.path);if(a!=null&&a.serverType==="ImageServer")throw new h("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");c(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,t)})).then((r=>{let t=this.url;if(r.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),this.version===10.1&&!R(t))return this._fetchServerVersion(t,e).then((a=>{this.read({currentVersion:a})})).catch((()=>{}))}))}_fetchServerVersion(e,r){if(!U(e))return Promise.reject();const t=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return c(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then((a=>{if(a.data?.currentVersion)return a.data.currentVersion;throw new h("tile-layer:version-not-available","Server did not provide a version")}))}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^/]+(\/[^/]+)*)\/mapserver/i);return r?r[2]:void 0}_getDefaultAttribution(e){if(e==null)return null;let r;e=e.toLowerCase();for(let t=0,a=f.length;t<a;t++)if(r=f[t],r.toLowerCase().includes(e))return P("//static.arcgis.com/attribution/"+r);return null}_getDefaultTileServers(e){if(e==null)return[];const r=e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i)!==-1,t=e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i)!==-1;return r||t?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[g]}};s([o({readOnly:!0})],i.prototype,"attributionDataUrl",null),s([o({type:["show","hide","hide-children"]})],i.prototype,"listMode",void 0),s([o({json:{read:!0,write:!0}})],i.prototype,"blendMode",void 0),s([o()],i.prototype,"elevationInfo",void 0),s([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],i.prototype,"isReference",void 0),s([o({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],i.prototype,"operationalLayerType",void 0),s([o({type:Boolean})],i.prototype,"resampling",void 0),s([o()],i.prototype,"sourceJSON",void 0),s([o({type:v})],i.prototype,"spatialReference",void 0),s([B("spatialReference",["spatialReference","tileInfo"])],i.prototype,"readSpatialReference",null),s([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),s([o({readOnly:!0})],i.prototype,"sublayers",void 0),s([I("sublayers",{layers:{type:[J]}})],i.prototype,"writeSublayers",null),s([o({json:{read:!1,write:!1}})],i.prototype,"popupEnabled",void 0),s([o()],i.prototype,"tileServers",null),s([L("tileServers")],i.prototype,"castTileServers",null),s([o({readOnly:!0,json:{read:!1}})],i.prototype,"type",void 0),s([o(x)],i.prototype,"url",void 0),i=m=s([A("esri.layers.TileLayer")],i);const g=Symbol("default-fetch-tile");i.prototype.fetchTile[g]=!0;const Be=i;export{Be as default};
