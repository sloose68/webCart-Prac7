import{Q as w,R as y,S as I,U as T,V,W as u,X as H,Y as v,Z as n,a0 as f,a1 as C,D as U,a2 as c,a3 as d,a4 as q}from"./index-C4I_fUP4.js";import"./UpdateTracking2D-CgB3F_Ym.js";import"./Container-CZeqnlwj.js";import"./WGLContainer-qN_4MZTK.js";import"./Utils-hum9Cx-y.js";import"./StyleDefinition-D1zAlsIg.js";import"./constants-BwsikM5h.js";import"./GridShader-Bc9QeAW_.js";import"./pbf-DGtf7VFr.js";import"./TechniqueType-pk2C5RYg.js";import"./FramebufferObject-CagrE-NV.js";import"./FeatureCommandQueue-Bv7ri4gA.js";import"./PieChartMeshWriter-Dzjr28Sv.js";import"./constants-BFLErLYb.js";import"./renderState-C3IQJOgt.js";import"./glsl-Cj7KC756.js";import"./testSVGPremultipliedAlpha-Ci8hZxMF.js";import{O as Q}from"./GraphicsView2D-h7v4miQX.js";import"./earcut-D9gy186-.js";import"./vec3f32-WCVSSNPR.js";import{r as S,o,n as _}from"./imageUtils-NSjtsuvb.js";import{S as b,u as P}from"./LayerView-DxZd1v9F.js";import{a as G}from"./HighlightGraphicContainer-BJmDVbKE.js";import{i as L}from"./RefreshableLayerView-DnuQVnsm.js";import{_ as k,P as F,i as W}from"./MapServiceLayerViewHelper-D1VYGWNs.js";import{r as z}from"./drapedUtils-Cuo4xVdp.js";import"./ProgramTemplate-rc7Z_KF2.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./config-DHajyIwB.js";import"./featureConversionUtils-Czt6_jcD.js";import"./OptimizedFeature-Dmj1V1Yq.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./GraphShaderModule-C0wGeWQe.js";import"./ShaderBuilder-B2HQ4-qL.js";import"./BindType-BBwFZqyN.js";import"./utils-6J-Hl_7d.js";import"./CircularArray-CujHzHWW.js";import"./SymbolFader-N8NXD4_J.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-9Wrf-STg.js";import"./libtess-DosHW-aa.js";import"./basicInterfaces-N86vRvDz.js";import"./AttributeStore-5DkWEjfF.js";import"./queryUtils-Chtj8YBr.js";import"./json-Wa8cmqdu.js";import"./timeSupport-DL3uKLEj.js";import"./normalizeUtilsSync-JjdouSqR.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-CfuOnWDv.js";import"./BitmapTechnique-DMplTkSU.js";import"./bitmapUtils-CzcbNBWX.js";import"./TileContainer-BGULeqPz.js";import"./layerViewUtils-BPKRu_oF.js";import"./AGraphicContainer-C7WYsDSX.js";import"./TechniqueInstance-CWYyHnNW.js";import"./popupUtils-ZiJ-67Sy.js";const E=[0,0];let l=class extends L(S(b(P))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),this._highlightView?.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,i?.effectiveMinLOD,i?.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,h)=>this.fetchTile(e,h),scheduler:this.scheduler,priority:T.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),k(this,this.layer)){const e=this._highlightView=new Q({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new G(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new F({createFetchPopupFeaturesQueryGeometry:(h,s)=>z(h,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:h,property:s})=>e.graphicUpdateHandler({graphic:h,property:s}),layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add((()=>this.resampling),(()=>{this.doRefresh()}))),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._popupHighlightHelper?.destroy(),this._highlightView?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t,i){const e=W(t);if(e.length===0)return u();const h=i?.name??H;return this._addHighlightGraphics(e,h),u((()=>!this.destroyed&&this._removeHighlightGraphics(e,h)))}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map((e=>e.uid)),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map((e=>e.uid)),i)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return v(this.layer.tileInfo?.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh((t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t))))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(E,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",(()=>t.destroy())),this.requestUpdate()}async fetchTile(t,i={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,i):this._fetchTileWithoutTilemapCache(t,i)}async _fetchTileWithoutTilemapCache(t,i={}){const{signal:e,resamplingLevel:h=0}=i;try{return await this._fetchImage(t,e)}catch(s){if(n(s))throw s;if(!this.resampling)return o(this._tileInfoView.tileInfo.size);if(h<3){const r=this._tileInfoView.getTileParentId(t.id);if(r){const a=new f(r),p=await this._fetchTileWithoutTilemapCache(a,{...i,resamplingLevel:h+1});return _(this._tileInfoView,p,a,t)}}return o(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,i={}){const e=this.tilemapCache,{signal:h,resamplingLevel:s=0}=i,r=new f(0,0,0,0);let a,p=null;try{if(p=await e.fetchAvailabilityUpsample(t.level,t.row,t.col,r,{signal:h}),!this.resampling&&r.level!==t.level)return await C(i),o(this._tileInfoView.tileInfo.size);a=await this._fetchImage(r,h)}catch(m){if(n(m))throw m;if(this.resampling&&p==="unknown"&&s<3){const g=this._tileInfoView.getTileParentId(t.id);if(g){r.set(g);try{a=await this._fetchTileWithTilemapCache(r,{...i,resamplingLevel:s+1})}catch{}}}}return a?this.resampling?_(this._tileInfoView,a,r,t):a:o(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",(()=>this.requestUpdate()))}catch(i){n(i)||U.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};c([d()],l.prototype,"resampling",null),c([d()],l.prototype,"tilemapCache",null),l=c([q("esri.views.2d.layers.TileLayerView2D")],l);const $t=l;export{$t as default};
