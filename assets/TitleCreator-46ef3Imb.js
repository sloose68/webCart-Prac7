const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/featureUtils-C-psBCUu.js","assets/ScaleRangeLayer-CkcnxI7v.js"])))=>i.map(i=>d[i]);
import{aq as m,ar as y,w as g,_ as x,as as I,b as _,u as b,at as T,W as a,X as l,Y as F}from"./ScaleRangeLayer-CkcnxI7v.js";const v="relationships/",k="expression/";let r=class extends m{constructor(e){super(e),this._featureUtils=null,this.effectivePopupTemplate=null}get _arcadeTask(){return this.expressionsUsedInTitle.length>0?this._get("_arcadeTask")||y((()=>g())):null}get featureUtilsPromise(){return this._get("featureUtilsPromise")??x(()=>import("./featureUtils-C-psBCUu.js"),__vite__mapDeps([0,1])).then((e=>this._featureUtils=e))}get calculatedExpressions(){const e=new I;if(!this.expressionsUsedInTitle.length)return e;if(!this._arcadeTask?.value){for(const t of this.expressionsUsedInTitle??[])e.push({name:t.name,invalid:!0});return e}for(const t of this.expressionsUsedInTitle)try{const s=this._arcadeTask.value.arcade.parseScript(t.expression,["$layer","$map","$datastore"]);if(s.isAsync){e.push({name:t.name,invalid:!0});break}e.push({name:t.name,syntax:s,invalid:!1,func:this._arcadeTask.value.arcade.compileScript(s,{vars:{$feature:"any"}})})}catch{e.push({name:t.name,invalid:!0});break}return e}get expressionsUsedInTitle(){let e=this.effectivePopupTemplate?.title??"";return typeof e!="string"?[]:(e=e.toLowerCase(),this.effectivePopupTemplate?.expressionInfos?.filter((t=>e.includes(`{expression/${t.name.toLowerCase()}}`)))??[])}get fieldInfoMap(){return this._featureUtils?this._createFieldInfoMap(this._featureUtils.getAllFieldInfos(this.effectivePopupTemplate)):null}get hasBadExpressions(){return this.calculatedExpressions.some((e=>e.invalid===!0))}get requiredFields(){const e=new Set;if(this._arcadeTask?.value&&!this.hasBadExpressions)for(const s of this.calculatedExpressions?.toArray()??[])try{const i=this._arcadeTask.value.arcade.extractFieldLiterals(s.syntax);for(const n of i){const d=n.split("."),o=this.fieldsIndex.get(d.at(-1)??"");o&&e.add(o.name)}}catch{}const t=this._extractFieldNames(this.workingTitle);for(const s of t){const i=this.fieldsIndex.get(s);i&&e.add(i.name)}return this.objectIdField!=null&&e.add(this.objectIdField),e}get titleFromDisplayField(){let e="";return this.displayField&&(e=this.fieldsIndex.get(this.displayField)?.name??""),e||(e=this.fieldsIndex.get(this.objectIdField)?.name??""),e?`{${e}}`:""}get workingTitle(){const e=this.effectivePopupTemplate?this.effectivePopupTemplate.title:"";return e===""||e==null||this.hasBadExpressions||typeof e!="string"?this.titleFromDisplayField:e}async getTitle(e,t,s){const i=t.getObjectId()??t.attributes[e.objectIdField];return(await this.getTitles(e,[t],s)).get(i)??""}async getTitles(e,t,s){const i=new Map,n=s?.timeZone??"system";try{const[{substituteFieldsInLinksAndAttributes:d}]=await Promise.all([this.featureUtilsPromise,this._arcadeTask?.promise]);s?.fetchMissingFields&&(t=await this._checkAndReQueryGraphics(e,t));const{fieldInfoMap:o,workingTitle:u}=this,p=u&&o;t.forEach((c=>{const f=c.getObjectId()??c.attributes[e.objectIdField],h=p?d({attributes:c.attributes,expressionAttributes:null,fieldInfoMap:o,globalAttributes:this._createFormattedAttributes(e,c,n).global,layer:e,text:u}):"";i.set(f,h)}))}catch{}return i}async _checkAndReQueryGraphics(e,t){const s=t.map((i=>i.getObjectId()??i.attributes[e.objectIdField])).filter(_);if(s.length!==t.length)return t;if(t.some((i=>!b(i,this.requiredFields)))){const i=e.createQuery();i.where="1=1",i.outFields=[...this.requiredFields],i.objectIds=s;const n=await e.queryFeatures(i);if(n?.features.length===t.length)return n.features}return t}_createFieldInfoMap(e){const t=new Map;if(!e)return t;for(const s of e){if(!s.fieldName)continue;const i=this.fieldsIndex.get(s.fieldName),n=i?.name??s.fieldName;s.fieldName=n,t.set(n.toLowerCase(),s)}return t}_createFormattedAttributes(e,t,s="system"){const i=this.effectivePopupTemplate?.fieldInfos??[],n={};if(!this._featureUtils)return{};if(!this.hasBadExpressions&&this.calculatedExpressions.length>0&&this._arcadeTask?.value){const o=this._arcadeTask.value.Feature.createFromGraphicLikeObject(t.geometry,t.attributes,e,null);for(const u of this.calculatedExpressions)try{n[`expression/${u.name}`]=u.func({vars:{$feature:o}})}catch{}}const d={...t.attributes,...n};return{global:this._featureUtils.formatAttributes({fieldInfos:i,attributes:d,graphic:t,timeZone:s,layer:e,fieldInfoMap:this.fieldInfoMap}),content:[]}}_extractFieldNames(e){return T(e).filter((t=>!(t.indexOf(v)===0||t.indexOf(k)===0)))}};a([l({readOnly:!0})],r.prototype,"_arcadeTask",null),a([l()],r.prototype,"_featureUtils",void 0),a([l({readOnly:!0})],r.prototype,"featureUtilsPromise",null),a([l({readOnly:!0})],r.prototype,"calculatedExpressions",null),a([l()],r.prototype,"displayField",void 0),a([l()],r.prototype,"effectivePopupTemplate",void 0),a([l()],r.prototype,"expressionsUsedInTitle",null),a([l()],r.prototype,"fieldsIndex",void 0),a([l()],r.prototype,"fieldInfoMap",null),a([l()],r.prototype,"fields",void 0),a([l()],r.prototype,"objectIdField",void 0),a([l()],r.prototype,"requiredFields",null),r=a([F("esri.layers.support.TitleCreator")],r);export{r as u};
