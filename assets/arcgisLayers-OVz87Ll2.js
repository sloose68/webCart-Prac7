const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/GroupLayer-CMyAS4mw.js","assets/index-Ccrt8twN.js","assets/layersCreator-Dxo5Qii1.js","assets/loadUtils-DTTKoTxf.js","assets/fetchService-CYCM1PDk.js","assets/associatedFeatureServiceUtils-BdEHPoea.js","assets/lazyLayerLoader-D1Jvb5y3.js","assets/portalLayers-B2ydedEQ.js","assets/saveUtils-DChso-TN.js"])))=>i.map(i=>d[i]);
import{_ as L,p as P,d,z as I,n as g,I as U,q as O,o as v}from"./index-Ccrt8twN.js";import{s as T}from"./associatedFeatureServiceUtils-BdEHPoea.js";import{t as f,l as m,n as $}from"./fetchService-CYCM1PDk.js";import{a as C}from"./lazyLayerLoader-D1Jvb5y3.js";const _={FeatureLayer:!0,SceneLayer:!0,VideoLayer:!0};async function q(e){const{properties:t,url:r}=e,s={...t,url:r},l=await V(r,t?.customParameters),{Constructor:a,layerId:u,sourceJSON:c,parsedUrl:p,layers:o,tables:n}=l;if(o.length+n.length===0)return u!=null&&(s.layerId=u),c!=null&&(s.sourceJSON=c),new a(s);const i=new(await L(async()=>{const{default:y}=await import("./GroupLayer-CMyAS4mw.js");return{default:y}},__vite__mapDeps([0,1,2,3,4,5,6,7,8]))).default({title:p.title});return await F(i,l,s),i}function S(e,t){return e?e.find((({id:r})=>r===t)):null}function h(e,t,r,s,l){const a={...l,layerId:t};return e!=null&&(a.url=e),r!=null&&(a.sourceJSON=r),"sublayerTitleMode"in s.prototype&&(a.sublayerTitleMode="service-name"),new s(a)}async function F(e,t,r){const s=t.sublayerConstructorProvider;for(const{id:l,serverUrl:a}of t.layers){const u=S(t.sublayerInfos,l),c=h(a,l,u,(u&&s?.(u))??t.Constructor,r);e.add(c)}if(t.tables.length){const l=await w("FeatureLayer");t.tables.forEach((({id:a,serverUrl:u})=>{const c=h(u,a,S(t.tableInfos,a),l,r);e.tables.add(c)}))}}async function V(e,t){let r=P(e);if(r==null&&(r=await N(e,t)),r==null)throw new d("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:e});const{serverType:s,sublayer:l}=r;let a;const u={FeatureServer:"FeatureLayer",KnowledgeGraphServer:"KnowledgeGraphLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer",VideoServer:"VideoLayer"},c=s==="FeatureServer",p=s==="SceneServer",o={parsedUrl:r,Constructor:null,layerId:c||p?l??void 0:void 0,layers:[],tables:[]};switch(s){case"MapServer":if(l!=null){const{type:n}=await f(e,{customParameters:t});switch(a="FeatureLayer",n){case"Catalog Layer":a="CatalogLayer";break;case"Catalog Dynamic Group Layer":throw new d("arcgis-layers:unsupported",`fromUrl() not supported for "${n}" layers`)}}else a=await x(e,t)?"TileLayer":"MapImageLayer";break;case"ImageServer":{const n=await f(e,{customParameters:t}),{tileInfo:i,cacheType:y}=n;a=i?i?.format?.toUpperCase()!=="LERC"||y&&y.toLowerCase()!=="elevation"?"ImageryTileLayer":"ElevationLayer":"ImageryLayer";break}case"SceneServer":{const n=await f(r.url.path,{customParameters:t});if(a="SceneLayer",n){const i=n?.layers;if(n?.layerType==="Voxel")a="VoxelLayer";else if(i?.length){const y=i[0]?.layerType;y!=null&&v[y]!=null&&(a=v[y])}}break}case"3DTilesServer":throw new d("arcgis-layers:unsupported","fromUrl() not supported for 3DTiles layers");case"FeatureServer":if(a="FeatureLayer",l!=null){const n=await f(e,{customParameters:t});o.sourceJSON=n,o.preferredUrl=I(),a=m(n.type)}break;default:a=u[s]}if(_[a]&&l==null){const n=await J(e,s,t);if(c&&(o.preferredUrl=n.preferredUrl,o.sublayerInfos=n.layerInfos,o.tableInfos=n.tableInfos),n.layers.length+n.tables.length!==1)o.layers=n.layers,o.tables=n.tables,c&&n.layerInfos?.length&&(o.sublayerConstructorProvider=await E(n.layerInfos));else if(c||p){const i=n.layerInfos?.[0]??n.tableInfos?.[0];if(o.layerId=n.layers[0]?.id??n.tables[0]?.id,o.sourceJSON=i,c){const y=i?.type;a=m(y)}}}return o.Constructor=await w(a),o}async function N(e,t){const r=await f(e,{customParameters:t});let s=null,l=null;const a=r.type;if(a==="Feature Layer"||a==="Table"?(s="FeatureServer",l=r.id??null):a==="indexedVector"?s="VectorTileServer":r.hasOwnProperty("mapName")?s="MapServer":r.hasOwnProperty("bandCount")&&r.hasOwnProperty("pixelSizeX")?s="ImageServer":r.hasOwnProperty("maxRecordCount")&&r.hasOwnProperty("allowGeometryUpdates")?s="FeatureServer":r.hasOwnProperty("streamUrls")?s="StreamServer":b(r)?(s="SceneServer",l=r.id):r.hasOwnProperty("layers")&&b(r.layers?.[0])&&(s="SceneServer"),!s)return null;const u=l!=null?g(e):null;return{title:u!=null&&r.name||O(e),serverType:s,sublayer:l,url:{path:u!=null?u.serviceUrl:U(e).path}}}function b(e){return e!=null&&e.hasOwnProperty("store")&&e.hasOwnProperty("id")&&typeof e.id=="number"}async function J(e,t,r){let s,l,a,u=!1;switch(t){case"FeatureServer":{const o=await $(e,{customParameters:r});a=I(e,{preferredHost:o.preferredHost}),u=!!o.layersJSON,s=o.layersJSON||o.serviceJSON;break}case"SceneServer":{const o=await k(e,r);s=o.serviceInfo,l=o.tableServerUrl;break}default:s=await f(e,{customParameters:r})}const c=s?.layers,p=s?.tables;return{preferredUrl:a,layers:c?.map((o=>({id:o.id}))).reverse()||[],tables:p?.map((o=>({serverUrl:l,id:o.id}))).reverse()||[],layerInfos:u?c:[],tableInfos:u?p:[]}}async function k(e,t){const r=await f(e,{customParameters:t});if(!r.layers?.[0])return{serviceInfo:r};try{const{serverUrl:l}=await T(e),a=await f(l,{customParameters:t}).catch((()=>null));return a&&(r.tables=a.tables),{serviceInfo:r,tableServerUrl:l}}catch{return{serviceInfo:r}}}async function w(e){return(0,C[e])()}async function x(e,t){return(await f(e,{customParameters:t})).tileInfo}async function E(e){if(!e.length)return;const t=new Set,r=[];for(const{type:a}of e)t.has(a)||(t.add(a),r.push(w(m(a))));const s=await Promise.all(r),l=new Map;return Array.from(t).forEach(((a,u)=>{l.set(a,s[u])})),a=>l.get(a.type)}export{q as fromUrl};
