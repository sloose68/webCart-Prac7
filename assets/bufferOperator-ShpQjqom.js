import{f$ as c,b as x}from"./ScaleRangeLayer-CkcnxI7v.js";import{f as y,l as G}from"./operatorBuffer-C-2tNWhF.js";import{getSpatialReference as f,fromGeometry as g,toGeometry as u,fromGeometries as N}from"./jsonConverter-DKIKEt05.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./Point2D-l7nV1LsO.js";import"./ProjectionTransformation-D1eIuIhr.js";import"./Envelope2D-CLx0zf4a.js";import"./Transformation2D-B9-n_-ya.js";import"./OperatorDefinitions-DP7_WWTp.js";import"./GeometryCleaner-BEJM7I4l-Bq9alZL9.js";import"./OperatorSimplifyOGC-DVwx04vZ.js";import"./OperatorGeneralize-CeWMLCOm.js";function L(o,e,a={}){const{unit:t}=a,m=f(o);t&&m&&(e=c(e,t,m));const i=g(o),r=i.getSpatialReference();return u(y(i.getGeometry(),r,e),r)}function P(o,e,a={}){let{maxDeviation:t=NaN,maxVerticesInFullCircle:m=96,union:i=!1,unit:r}=a;const n=f(o);r&&n&&(e=e.map((p=>c(p,r,n))),t&&(t=c(t,r,n)));const[l,s]=N(o);return G(l,s,e,t,m,i).map((p=>u(p,s))).filter(x)}export{L as execute,P as executeMany};
