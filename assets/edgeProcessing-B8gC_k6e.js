import{e as Ot}from"./deduplicate-CTCyxVSx.js";import{O as L}from"./InterleavedLayout-CnwoTp3j.js";import{e as c}from"./VertexAttribute-BfkzOMLV.js";import{t as et}from"./glUtil-QdRpcC_G.js";import{b4 as T,dq as nt,eR as St,eQ as q,bB as it,bn as J,ez as at,bp as ht,br as dt,eT as At,eS as Et,bD as gt,eB as Tt,kK as wt}from"./ScaleRangeLayer-CkcnxI7v.js";import{e as Y}from"./Normals-Q5fXSRos.js";const vt=L().vec3f(c.POSITION).u16(c.COMPONENTINDEX).freeze(),$t=L().vec2u8(c.SIDENESS).freeze();et($t);const j=L().vec3f(c.POSITION0).vec3f(c.POSITION1).vec2i16(c.NORMALCOMPRESSED).u16(c.COMPONENTINDEX).u8(c.VARIANTOFFSET,{glNormalized:!0}).u8(c.VARIANTSTROKE).u8(c.VARIANTEXTENSION,{glNormalized:!0}).freeze(),H=L().vec3f(c.POSITION0).vec3f(c.POSITION1).vec2i16(c.NORMALCOMPRESSED).vec2i16(c.NORMAL2COMPRESSED).u16(c.COMPONENTINDEX).u8(c.VARIANTOFFSET,{glNormalized:!0}).u8(c.VARIANTSTROKE).u8(c.VARIANTEXTENSION,{glNormalized:!0}).freeze();c.POSITION0,c.POSITION1,c.COMPONENTINDEX,c.VARIANTOFFSET,c.VARIANTSTROKE,c.VARIANTEXTENSION,c.NORMALCOMPRESSED,c.NORMAL2COMPRESSED,c.SIDENESS;class yt{constructor(){this.position0=T(),this.position1=T(),this.faceNormal0=T(),this.faceNormal1=T(),this.componentIndex=0,this.cosAngle=0}}const k=-1;function Rt(t,n,s){const r=t.vertices.position,a=t.vertices.componentIndex,f=m.position0,d=m.position1,g=m.faceNormal0,S=m.faceNormal1,{edges:i,normals:p}=xt(t),I=i.length/4,A=n.allocate(I);let P=0;const F=I,w=s?.allocate(F);let B=0,e=0,o=0;z.length=0;for(let h=0;h<I;++h){const $=4*h;r.getVec(i.data[$],f),r.getVec(i.data[$+1],d);const x=z.pushNew();x.index=4*h,x.length=St(f,d)}z.sort(((h,$)=>$.length-h.length));const u=new Array,l=new Array;z.forAll((({length:h,index:$})=>{const x=i.data[$],It=i.data[$+1],st=i.data[$+2],ot=i.data[$+3],rt=ot===k;if(r.getVec(x,f),r.getVec(It,d),rt){const E=3*st;q(g,p.data[E],p.data[E+1],p.data[E+2]),it(S,g),m.componentIndex=a.get(x),m.cosAngle=J(g,S)}else{let E=3*st;if(q(g,p.data[E],p.data[E+1],p.data[E+2]),E=3*ot,q(S,p.data[E],p.data[E+1],p.data[E+2]),m.componentIndex=a.get(x),m.cosAngle=J(g,S),Pt(m,Ct))return;m.cosAngle<-.9999&&it(S,g)}e+=h,o++,rt||Mt(m,Ft)?(n.write(A,P++,m),u.push(h)):Vt(m,Nt)&&(w&&s&&s.write(w,B++,m),l.push(h))}));const O=new Float32Array(u.reverse()),v=new Float32Array(l.reverse()),y=w&&s?{instancesData:w.slice(0,B),lodInfo:{lengths:v}}:void 0;return{regular:{instancesData:A.slice(0,P),lodInfo:{lengths:O}},silhouette:y,averageEdgeLength:e/o}}function Mt(t,n){return t.cosAngle<n}function Pt(t,n){return t.cosAngle>n}function Vt(t,n){const s=At(t.cosAngle);return Et(ct,t.position1,t.position0),s*(J(ht(bt,t.faceNormal0,t.faceNormal1),ct)>0?-1:1)>n}function xt(t){const n=t.faces.length/3,s=t.faces,r=t.neighbors,a=t.vertices.position;N.length=Q.length=0;for(let f=0;f<n;f++){const d=3*f,g=r[d],S=r[d+1],i=r[d+2],p=s[d],I=s[d+1],A=s[d+2];a.getVec(p,V),a.getVec(I,X),a.getVec(A,U),at(X,X,V),at(U,U,V),ht(V,X,U),dt(V,V),Q.pushArray(V),(g===k||p<I)&&(N.push(p),N.push(I),N.push(f),N.push(g)),(S===k||I<A)&&(N.push(I),N.push(A),N.push(f),N.push(S)),(i===k||A<p)&&(N.push(A),N.push(p),N.push(f),N.push(i))}return{edges:N,normals:Q}}class Dt{constructor(){this.index=0,this.length=0}}const z=new nt({allocator:t=>t||new Dt,deallocator:null}),N=new nt({deallocator:null}),Q=new nt({deallocator:null}),m=new yt,bt=T(),ct=T(),V=T(),X=T(),U=T(),Nt=gt(4),Ct=Math.cos(Nt),Lt=gt(35),Ft=Math.cos(Lt);function lt(t,n,s){const r=n/3,a=new Uint32Array(s+1),f=new Uint32Array(s+1),d=(e,o)=>{e<o?a[e+1]++:f[o+1]++};for(let e=0;e<r;e++){const o=t[3*e],u=t[3*e+1],l=t[3*e+2];d(o,u),d(u,l),d(l,o)}let g=0,S=0;for(let e=0;e<s;e++){const o=a[e+1],u=f[e+1];a[e+1]=g,f[e+1]=S,g+=o,S+=u}const i=new Uint32Array(6*r),p=a[s],I=(e,o,u)=>{if(e<o){const l=a[e+1]++;i[2*l]=o,i[2*l+1]=u}else{const l=f[o+1]++;i[2*p+2*l]=e,i[2*p+2*l+1]=u}};for(let e=0;e<r;e++){const o=t[3*e],u=t[3*e+1],l=t[3*e+2];I(o,u,e),I(u,l,e),I(l,o,e)}const A=(e,o)=>{const u=2*e,l=o-e;for(let O=1;O<l;O++){const v=i[u+2*O],y=i[u+2*O+1];let h=O-1;for(;h>=0&&i[u+2*h]>v;h--)i[u+2*h+2]=i[u+2*h],i[u+2*h+3]=i[u+2*h+1];i[u+2*h+2]=v,i[u+2*h+3]=y}};for(let e=0;e<s;e++)A(a[e],a[e+1]),A(p+f[e],p+f[e+1]);const P=new Int32Array(3*r),F=(e,o)=>e===t[3*o]?0:e===t[3*o+1]?1:e===t[3*o+2]?2:-1,w=(e,o)=>{const u=F(e,o);P[3*o+u]=-1},B=(e,o,u,l)=>{const O=F(e,o);P[3*o+O]=l;const v=F(u,l);P[3*l+v]=o};for(let e=0;e<s;e++){let o=a[e];const u=a[e+1];let l=f[e];const O=f[e+1];for(;o<u&&l<O;){const v=i[2*o],y=i[2*p+2*l];v===y?(B(e,i[2*o+1],y,i[2*p+2*l+1]),o++,l++):v<y?(w(e,i[2*o+1]),o++):(w(y,i[2*p+2*l+1]),l++)}for(;o<u;)w(e,i[2*o+1]),o++;for(;l<O;)w(i[2*p+2*l],i[2*p+2*l+1]),l++}return P}const G=.7;let mt=class{updateSettings(n){this.settings=n,this._edgeHashFunction=n.reducedPrecision?zt:Bt}write(n,s,r){W.seed=this._edgeHashFunction(r);const a=W.getIntRange(0,255),f=W.getIntRange(0,this.settings.variants-1),d=W.getFloat(),g=255*(.5*Xt(-(1-Math.min(d/G,1))+Math.max(0,d-G)/(1-G),1.2)+.5);n.position0.setVec(s,r.position0),n.position1.setVec(s,r.position1),n.componentIndex.set(s,r.componentIndex),n.variantOffset.set(s,a),n.variantStroke.set(s,f),n.variantExtension.set(s,g)}};const R=new Float32Array(6),M=new Uint32Array(R.buffer),C=new Uint32Array(1);function Bt(t){return R[0]=t.position0[0],R[1]=t.position0[1],R[2]=t.position0[2],R[3]=t.position1[0],R[4]=t.position1[1],R[5]=t.position1[2],C[0]=31*(31*(31*(31*(31*(166811+M[0])+M[1])+M[2])+M[3])+M[4])+M[5],C[0]}function zt(t){const n=R;n[0]=D(t.position0[0]),n[1]=D(t.position0[1]),n[2]=D(t.position0[2]),n[3]=D(t.position1[0]),n[4]=D(t.position1[1]),n[5]=D(t.position1[2]),C[0]=5381;for(let s=0;s<M.length;s++)C[0]=31*C[0]+M[s];return C[0]}const ut=1e4;function D(t){return Math.round(t*ut)/ut}function Xt(t,n){return Math.abs(t)**n*Math.sign(t)}const K=class K{constructor(){this._commonWriter=new mt}updateSettings(n){this._commonWriter.updateSettings(n)}allocate(n){return j.createBuffer(n)}write(n,s,r){this._commonWriter.write(n,s,r),Tt(b,r.faceNormal0,r.faceNormal1),dt(b,b);const{typedBuffer:a,typedBufferStride:f}=n.normalCompressed;Y(a,s,b[0],b[1],b[2],f)}};K.Layout=j,K.glLayout=et(j,1);let Z=K;const _=class _{constructor(){this._commonWriter=new mt}updateSettings(n){this._commonWriter.updateSettings(n)}allocate(n){return H.createBuffer(n)}write(n,s,r){this._commonWriter.write(n,s,r);{const{typedBuffer:a,typedBufferStride:f}=n.normalCompressed;Y(a,s,r.faceNormal0[0],r.faceNormal0[1],r.faceNormal0[2],f)}{const{typedBuffer:a,typedBufferStride:f}=n.normal2Compressed;Y(a,s,r.faceNormal1[0],r.faceNormal1[1],r.faceNormal1[2],f)}}};_.Layout=H,_.glLayout=et(H,1);let tt=_;const b=T(),W=new wt;function Gt(t){const n=Ut(t.data,t.skipDeduplicate,t.indices,t.indicesLength);return ft.updateSettings(t.writerSettings),pt.updateSettings(t.writerSettings),Rt(n,ft,pt)}function Ut(t,n,s,r){if(n){const d=lt(s,r,t.count);return new Wt(s,r,d,t)}const a=Ot(t.buffer,t.stride/4,{originalIndices:s}),f=lt(a.indices,r,a.uniqueCount);return{faces:a.indices,facesLength:a.indices.length,neighbors:f,vertices:vt.createView(a.buffer)}}class Wt{constructor(n,s,r,a){this.faces=n,this.facesLength=s,this.neighbors=r,this.vertices=a}}const ft=new Z,pt=new tt,Jt=L().vec3f(c.POSITION0).vec3f(c.POSITION1),Yt=L().vec3f(c.POSITION0).vec3f(c.POSITION1).u16(c.COMPONENTINDEX);export{vt as E,Jt as d,Gt as f,Yt as g,Rt as p,Ut as u};
