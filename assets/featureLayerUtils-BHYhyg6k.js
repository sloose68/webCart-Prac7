const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/CatalogLayer-i6PCBmCq.js","assets/index-DO5zGDFy.js","assets/utils-CztKhyhh.js","assets/ClassBreaksDefinition-BJEqQgUP.js","assets/FeatureLayerSource-VqjKXT1y.js","assets/MeshLocalVertexSpace-COWcaa-l.js","assets/meshVertexSpaceUtils-Bb8IoviT.js","assets/External-Cp8Od0-H.js","assets/MeshTransform-Dcdd75Iq.js","assets/mat4f64-q_b6UJoq.js","assets/quat-v-4FoJvm.js","assets/mat3f64-B5o_lm6j.js","assets/quatf64-aQ5IuZRd.js","assets/axisAngleDegrees-BGUQttvb.js","assets/editingSupport-DzVNRpoc.js","assets/clientSideDefaults-C9J3dTWQ.js","assets/QueryEngineCapabilities-CsRUnGk7.js","assets/QueryTask-BQj94v77.js","assets/executeForIds-BnjGQ6gN.js","assets/query-BP2eh2V_.js","assets/pbfQueryUtils-B1Vg6oKs.js","assets/pbf-BtUhcBfS.js","assets/OptimizedFeature-DXawZqVI.js","assets/OptimizedFeatureSet-BR8EEvDc.js","assets/executeQueryJSON-BeobjtaJ.js","assets/featureConversionUtils-CLKc-TL5.js","assets/OrientedImageryLayer-DetJo86-.js"])))=>i.map(i=>d[i]);
import{p as m,b as V,l as g,d as y,u as f,e as B,f as u,g as K,h as j,j as z,_ as I,k as H}from"./index-DO5zGDFy.js";import{i as w}from"./originUtils-g6LU6MiT.js";import{P as q,w as O,d as Q,v as W,$ as X,p as x,f as Z,I as N,m as E}from"./utils-CjMZHEOD.js";import{n as ee,l as ae}from"./fetchService-BHBbYtrG.js";import{o as te}from"./jsonContext-r92RYpBI.js";import"./saveUtils-foTgqyXp.js";const T="Feature Service",v="feature-layer-utils",re=`${v}-save`,ne=`${v}-save-as`,p=`${v}-saveall`,d=`${v}-saveall-as`;function S(e){return{isValid:H(e)&&(!("dynamicDataSource"in e)||!e.dynamicDataSource),errorMessage:"Feature layer should be a layer or table in a map or feature service"}}function b(e,a){const t=te(e,"portal-item");return a?.isTable&&(t.layerContainerType="tables"),t}function R(e){const a=b(e),t=b(e);return t.layerContainerType="tables",{forLayers:a,forTables:t}}function D(e){const a=[],t=[];for(const{layer:r,layerJSON:o}of e)se(r)?t.push(o):a.push(o);return{layers:a,tables:t}}function se(e,a){return e.isTable}function J(e){return D([e])}async function G(e,a){return/\/\d+\/?$/.test(e.url)?J(a[0]):U(a,e)}async function U(e,a){if(e.reverse(),!a)return D(e);const t=await oe(a,e);for(const r of e)C(r.layer,r.layerJSON,t);return ce(t,e),t}async function oe(e,a){let t=await e.fetchData("json");if(le(t)&&!B(e,u.HOSTED_SERVICE))return t;t||={},ie(t);const{layer:{url:r,customParameters:o,apiKey:n}}=a[0];return await ue(t,{url:r??"",customParameters:o,apiKey:n},a.map((s=>s.layer.layerId))),t}function le(e){return!!(e&&Array.isArray(e.layers)&&Array.isArray(e.tables))}function ie(e){e.layers||=[],e.tables||=[]}function ce(e,a){const t=[],r=[];for(const{layer:o}of a){const{isTable:n,layerId:s}=o;n?r.push(s):t.push(s)}P(e.layers,t),P(e.tables,r)}function P(e,a){if(e.length<2)return;const t=[];for(const{id:r}of e)t.push(r);j(t.sort($),a.slice().sort($))&&e.sort(((r,o)=>{const n=a.indexOf(r.id),s=a.indexOf(o.id);return n<s?-1:n>s?1:0}))}function $(e,a){return e<a?-1:e>a?1:0}async function ue(e,a,t){const{url:r,customParameters:o,apiKey:n}=a,{serviceJSON:s,layersJSON:l}=await ee(r,{customParameters:o,apiKey:n}),i=_(e.layers,s.layers,t),c=_(e.tables,s.tables,t);e.layers=i.itemResources,e.tables=c.itemResources;const h=[...i.added,...c.added],k=l?[...l.layers,...l.tables]:[];await ye(e,h,r,k)}function _(e,a,t){const r=z(e,a,((n,s)=>n.id===s.id));e=e.filter((n=>!r.removed.some((s=>s.id===n.id))));const o=r.added;return o.forEach((({id:n})=>{e.push({id:n})})),{itemResources:e,added:o.filter((({id:n})=>!t.includes(n)))}}async function ye(e,a,t,r){const o=await fe(a),n=a.map((({id:s,type:l})=>new(o.get(l))({url:t,layerId:s,sourceJSON:r.find((({id:i})=>i===s))})));await Promise.allSettled(n.map((s=>s.load()))),n.forEach((s=>{const{layerId:l,loaded:i,defaultPopupTemplate:c}=s;if(!i||c==null)return;const h={id:l,popupInfo:c.toJSON()};C(s,s.operationalLayerType==="ArcGISFeatureLayer"?h:{...h,layerType:s.operationalLayerType},e)}))}async function fe(e){const a=[];e.forEach((({type:o})=>{switch(ae(o)){case"CatalogLayer":a.push(I(()=>import("./CatalogLayer-i6PCBmCq.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])).then((n=>n.default)));break;case"FeatureLayer":a.push(I(()=>import("./index-DO5zGDFy.js").then(n=>n.w9),[]).then((n=>n.default)));break;case"OrientedImageryLayer":a.push(I(()=>import("./OrientedImageryLayer-DetJo86-.js"),__vite__mapDeps([26,1])).then((n=>n.default)))}}));const t=await Promise.all(a),r=new Map;return e.forEach((({type:o},n)=>{r.set(o,t[n])})),r}function C(e,a,t){e.isTable?A(t.tables,a):A(t.layers,a)}function A(e,a){const t=e.findIndex((({id:r})=>r===a.id));t===-1?e.push(a):e[t]=a}function F(e,a){if(!e.length)throw new y(`${a}:missing-parameters`,"'layers' array should contain at least one feature layer")}function pe(e,a){const t=e.map((r=>r.portalItem.id));if(new Set(t).size>1)throw new y(`${a}:invalid-parameters`,"All layers in the 'layers' array should be loaded from the same portal item")}function M(e,a){const t=e.map((r=>r.layerId));if(new Set(t).size!==t.length)throw new y(`${a}:invalid-parameters`,"'layers' array should contain only one instance each of layer or table in a feature service")}async function de(e){F(e,p),await Promise.all(e.map((a=>a.load())));for(const a of e)x(a,p,S),Z({layer:a,itemType:T,errorNamePrefix:p});pe(e,p),M(e,p)}function me(e){if(!("layerType"in e))return!!e.charts?.length;switch(e.layerType){case"OrientedImageryLayer":return!!e.charts?.length;case"SubtypeGroupLayer":return!!e.layers.some((a=>!!a.charts?.length));case"SubtypeGroupTable":return!!e.tables.some((a=>!!a.charts?.length));case"CatalogLayer":return!!e.footprintLayer?.charts?.length}}function L(e,a){let t=0,r=0,o=0,n=0;for(const s of[...a.layers,...a.tables])if(me(s)&&n++,"layerType"in s)switch(s.layerType){case"OrientedImageryLayer":t++;break;case"SubtypeGroupLayer":r++;break;case"SubtypeGroupTable":o++}f(e,u.ORIENTED_IMAGERY_LAYER,t>0),f(e,u.SUBTYPE_GROUP_LAYER,r>0),f(e,u.SUBTYPE_GROUP_TABLE,o>0),f(e,u.CHARTS,n>0)}function Y(e,a,t){K(a,u.METADATA),f(a,u.MULTI_LAYER,e.length>1),f(a,u.SINGLE_LAYER,e.length===1),f(a,u.TABLE,t.tables.length>0&&t.layers.length===0),L(a,t)}async function he(e,a,t){L(a,t)}async function we(e,a,t){const{url:r,layerId:o,title:n,fullExtent:s,isTable:l}=e,i=m(r);a.url=(i?.serverType==="FeatureServer"?r:`${r}/${o}`)??null,a.title||=n,a.extent=null,l||s==null||(a.extent=await g(s)),Y([e],a,t)}function be(e,a){for(const n of e){const s=n.parsedUrl.path,l=m(s);if(!l?.url.path)throw new y(`${a}:invalid-parameters`,E(n,`has unsupported url pattern: ${s}`),{layer:n});const c=l?.serverType;if(c!=="FeatureServer"&&c!=="MapServer")throw new y(`${a}:invalid-parameters`,E(n,`has unsupported server type: ${c}`),{layer:n});if(c==="MapServer"&&e.length>1)throw new y(`${a}:invalid-parameters`,"Only one layer or table in a map service can be saved")}const t=m(e[0].parsedUrl.path),r=t?.url.path;if(!e.every((n=>m(n.parsedUrl.path)?.url.path===r)))throw new y(`${a}:invalid-parameters`,"'layers' array should only contain layers or tables that belong to the same feature service")}async function Te(e){F(e,d),await Promise.all(e.map((a=>a.load())));for(const a of e)x(a,d,S);be(e,d),M(e,d)}function ve(e,a){L(e,a),N(e)}async function Se(e,a,t){let r=0;for(const{isTable:s}of e)s||r++;const o=e[0].parsedUrl.path,n=m(o);if(a.url=n?.serverType==="FeatureServer"?n.url.path:o,a.title||=n.title,a.extent=null,r>0){const s=e.map((l=>l.fullExtent)).filter(V).reduce(((l,i)=>l.clone().union(i)));s&&(a.extent=await g(s))}Y(e,a,t),N(a)}async function Ae(e,a){return q({layer:e,itemType:T,validateLayer:S,createJSONContext:t=>b(t,e),createItemData:(t,r)=>G(r,[t]),errorNamePrefix:re,setItemProperties:he},a)}async function ge(e,a){await de(e);const t=e[0].portalItem,r=R(t),o=await Promise.all(e.map((s=>O(s,s.isTable?r.forTables:r.forLayers,a)))),n=await G(t,e.map(((s,l)=>({layer:s,layerJSON:o[l]}))));return ve(t,n),await t.update({data:n}),await Promise.all(e.slice(1).map((s=>s.portalItem.reload()))),w(r.forLayers),w(r.forTables),t.clone()}async function Oe(e,a,t){return X({layer:e,itemType:T,validateLayer:S,createJSONContext:r=>b(r,e),createItemData:(r,o)=>Promise.resolve(J(r)),errorNamePrefix:ne,newItem:a,setItemProperties:we},t)}async function xe(e,a,t){await Te(e);const r=Q({itemType:T,errorNamePrefix:d,newItem:a}),o=R(r),n=await Promise.all(e.map((l=>O(l,l.isTable?o.forTables:o.forLayers,t)))),s=await U(e.map(((l,i)=>({layer:l,layerJSON:n[i]}))));await Se(e,r,s),await W(r,s,t);for(const l of e)l.portalItem=r.clone();return w(o.forLayers),w(o.forTables),r}export{Ae as save,ge as saveAll,xe as saveAllAs,Oe as saveAs};
