const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/jsonConverter-DKIKEt05.js","assets/Point2D-l7nV1LsO.js","assets/ProjectionTransformation-D1eIuIhr.js","assets/Envelope2D-CLx0zf4a.js","assets/Transformation2D-B9-n_-ya.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/ScaleRangeLayer-CkcnxI7v.js","assets/OperatorDefinitions-DP7_WWTp.js"])))=>i.map(i=>d[i]);
import{cO as m,b as _,_ as d}from"./ScaleRangeLayer-CkcnxI7v.js";import{i as v,c as x,u as g,s as G}from"./operatorGeodesicBuffer-SG8W3VpP.js";import{e as l}from"./geodeticCurveType-CirnHLSB.js";import"./SimpleGeometryCursor-B92kdZ15.js";let c,y,f;function N(){return!!c&&G()}async function E(){if(!N()){const[t]=await Promise.all([d(()=>import("./jsonConverter-DKIKEt05.js"),__vite__mapDeps([0,1,2,3,4,5,6,7])),g()]);c=t.fromGeometries,y=t.fromGeometry,f=t.toGeometry}}function O(t,o,s={}){let{curveType:n="geodesic",maxDeviation:e=NaN,unit:r}=s;r&&(o=m(o,r,"meters"),e&&(e=m(e,r,"meters")));const a=y(t),i=a.getSpatialReference();return f(v(a.getGeometry(),i,l[n],o,e),i)}function R(t,o,s={}){let{curveType:n="geodesic",maxDeviation:e=NaN,union:r=!1,unit:a}=s;a&&(o=o.map((u=>m(u,a,"meters"))),e&&(e=m(e,a,"meters")));const[i,p]=c(t);return x(i,p,l[n],o,e,r).map((u=>f(u,p))).filter(_)}export{O as execute,R as executeMany,N as isLoaded,E as load};
