import{uA as z,L as I,a as k,E as f,fL as g,x as D,i as L,iI as N,c as O}from"./index-C4I_fUP4.js";import{g as P,n as A}from"./dom-DRyXx330.js";import{c as S}from"./observers-Cra4fbRE.js";/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.2.1 */const v=new Set,y={trace:0,debug:1,info:2,warn:4,error:8,off:10};function U(e){return y[e]>=y[z]}function l(e,...t){if(!U(e))return;console[e].call(this,"%ccalcite","background: #007AC2; color: #fff; border-radius: 4px; padding: 2px 4px;",...t)}let b;const j={debug:e=>l("debug",e),info:e=>l("info",e),warn:e=>l("warn",e),error:e=>l("error",e),trace:e=>l("trace",e),deprecated:F};function F(e,{component:t,name:n,suggested:i,removalVersion:s}){const a=`${e}:${e==="component"?"":t}${n}`;if(v.has(a))return;v.add(a);const o=Array.isArray(i);o&&!b&&(b=new Intl.ListFormat("en",{style:"long",type:"disjunction"}));const h=`[${n}] ${e} is deprecated and will be removed in ${s==="future"?"a future version":`v${s}`}.${i?` Use ${o?b.format(i.map(r=>`"${r}"`)):`"${i}"`} instead.`:""}`;l("warn",h)}/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.2.1 */const B={flipRtl:"flip-rtl"},$={},m={},x={s:16,m:24,l:32};function w({icon:e,scale:t}){const n=x[t],i=T(e),s=i.charAt(i.length-1)==="F";return`${s?i.substring(0,i.length-1):i}${n}${s?"F":""}`}async function E(e){const t=w(e),n=C(t);if(n)return n;m[t]||(m[t]=fetch(N(`./assets/icon/${t}.json`)).then(s=>s.json()).catch(()=>(j.error(`${e.icon} (${e.scale}) icon failed to load`),"")));const i=await m[t];return $[t]=i,i}function R(e){return C(w(e))}function C(e){return $[e]}function T(e){const t=!isNaN(Number(e.charAt(0))),n=e.split("-");if(n.length>0){const s=/[a-z]/i;e=n.map((a,o)=>a.replace(s,function(r,u){return o===0&&u===0?r:r.toUpperCase()})).join("")}return t?`i${e}`:e}const M=L`:host{display:inline-flex;color:var(--calcite-icon-color, var(--calcite-ui-icon-color, currentColor))}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}`,p=class p extends I{constructor(){super(...arguments),this.visible=!1,this.flipRtl=!1,this.icon=null,this.preload=!1,this.scale="m"}connectedCallback(){if(super.connectedCallback(),this.preload){this.visible=!0,this.loadIconPathData();return}this.visible||this.waitUntilVisible(()=>{this.visible=!0,this.loadIconPathData()})}willUpdate(t){(t.has("icon")&&(this.hasUpdated||this.icon!==null)||t.has("scale")&&(this.hasUpdated||this.scale!=="m"))&&this.loadIconPathData()}disconnectedCallback(){super.disconnectedCallback(),this.intersectionObserver?.disconnect(),this.intersectionObserver=null}async loadIconPathData(){const{icon:t,scale:n,visible:i}=this;if(!t||!i)return;const s={icon:t,scale:n},a=R(s)||await E(s);t===this.icon&&(this.pathData=a)}waitUntilVisible(t){if(this.intersectionObserver=S("intersection",n=>{n.forEach(i=>{i.isIntersecting&&(this.intersectionObserver.disconnect(),this.intersectionObserver=null,t())})},{rootMargin:"50px"}),!this.intersectionObserver){t();return}this.intersectionObserver.observe(this.el)}render(){const{el:t,flipRtl:n,pathData:i,scale:s,textLabel:a}=this,o=P(t),h=x[s],r=!!a,u=[].concat(i||"");return this.el.ariaHidden=A(!r),this.el.ariaLabel=r?a:null,this.el.role=r?"img":null,D`<svg aria-hidden=true class=${k({[B.flipRtl]:o==="rtl"&&n,svg:!0})} fill=currentColor height=100% viewBox=${`0 0 ${h} ${h}`} width=100% xmlns=http://www.w3.org/2000/svg>${u.map(c=>typeof c=="string"?g`<path d=${c??f} />`:g`<path d=${c.d??f} opacity=${("opacity"in c?c.opacity:1)??f} />`)}</svg>`}};p.properties={pathData:[16,{},{state:!0}],visible:[16,{},{state:!0}],flipRtl:[7,{},{reflect:!0,type:Boolean}],icon:[3,{},{reflect:!0}],preload:[7,{},{reflect:!0,type:Boolean}],scale:[3,{},{reflect:!0}],textLabel:1},p.styles=M;let d=p;O("calcite-icon",d);const H=Object.freeze(Object.defineProperty({__proto__:null,Icon:d},Symbol.toStringTag,{value:"Module"}));export{H as i,j as l};
