import{T as z,$ as C,w as O,ay as R,dU as Y,cj as A,a_ as D,dV as G,dW as V,dX as v,dY as _,d as E,dD as S}from"./ScaleRangeLayer-CkcnxI7v.js";import{m as U,B as L}from"./utils-DQMqVVDu.js";let f=null;const P=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function k(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function J(e,t,n,i){const s=Y(n)?A(n):null,o=s?Math.round((s.valid[1]-s.valid[0])/t.scale[0]):null;return e.map((a=>{const l=new D(a.geometry);return G(t,l,l),a.geometry=s?k(l,o??0,i[0]):l,a}))}function K(e,t=18,n,i,s){const o=new Float64Array(i*s);t=Math.round(S(t));let a=Number.POSITIVE_INFINITY,l=Number.NEGATIVE_INFINITY;const F=V(n);for(const{geometry:p,attributes:N}of e){const{x:g,y:c}=p,w=Math.max(0,g-t),b=Math.max(0,c-t),M=Math.min(s,c+t),x=Math.min(i,g+t),h=+F(N);for(let d=b;d<M;d++)for(let m=w;m<x;m++){const $=d*i+m,I=_(m-g,d-c,t)*h,u=o[$]+=I;a=Math.min(a,u),l=Math.max(l,u)}}return{min:a,max:l}}function q(e){const t=P.exec(e);if(!t)return null;const{hh:n,mm:i,ss:s,ms:o}=t.groups;return Number(n)*v.hours+Number(i)*v.minutes+Number(s)*v.seconds+Number(o||0)}async function Q(e,t,n=!0){if(!t)return[];const{field:i,field2:s,field3:o,fieldDelimiter:a,fieldInfos:l,timeZone:F}=e,p=i&&l?.find((u=>u.name.toLowerCase()===i.toLowerCase())),N=!!p&&z(p),g=!!p&&C(p),c=e.valueExpression,w=e.normalizationType,b=e.normalizationField,M=e.normalizationTotal,x=[],h=e.viewInfoParams;let d=null,m=null;if(c){if(!f){const{arcadeUtils:u}=await O();f=u}f.hasGeometryOperations(c)&&await f.enableGeometryOperations(),d=f.createFunction(c),m=h?f.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new R(h.spatialReference)}):null}const $=e.fieldInfos,I=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&$?{fields:$}:null;return t.forEach((u=>{const y=u.attributes;let r;if(c){const T=I?{...u,layer:I}:u,j=f.createExecContext(T,m,F);r=f.executeFunction(d,j)}else y&&(r=y[i],s?(r=`${U(r)}${a}${U(y[s])}`,o&&(r=`${r}${a}${U(y[o])}`)):typeof r=="string"&&n&&(g?r=r?new Date(r).getTime():null:N&&(r=r?q(r):null)));if(w&&typeof r=="number"&&isFinite(r)){const T=y&&parseFloat(y[b]);r=L(r,w,T,M)}x.push(r)})),x}function ee(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let s;return n==="field"?s="(NOT "+i+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(s=`(${t} > 0)`),s}function te(e,t,n){const i=t!=null?e+" >= "+t:"",s=n!=null?e+" <= "+n:"";let o="";return o=i&&s?B(i,s):i||s,o?"("+o+")":""}function B(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function ne(e,t){if(e&&e.spatialRelationship!=="intersects")return new E(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function ie(e,t,n){const i=W({layer:e,fields:t});if(i.length)return new E(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const s=X({layer:e,fields:t});return s.length?new E(n,"Unsupported fields: "+s.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function W(e){const t=e.layer;return e.fields.filter((n=>!t.getField(n)))}function X(e){const t=e.layer;return e.fields.filter((n=>{const i=t.getFieldUsageInfo(n);return!i||!i.supportsStatistics}))}export{ee as F,q as I,ne as M,te as N,ie as T,B as U,Q as b,K as w,J as x};
